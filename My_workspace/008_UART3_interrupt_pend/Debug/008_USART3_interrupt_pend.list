
008_USART3_interrupt_pend.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000b94  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000018  08000d1c  08000d1c  00001d1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000d34  08000d34  0000205c  2**0
                  CONTENTS
  4 .ARM          00000000  08000d34  08000d34  0000205c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000d34  08000d34  0000205c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000d34  08000d34  00001d34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000d38  08000d38  00001d38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08000d3c  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000205c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0000205c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0000205c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000205c  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000091f  00000000  00000000  0000208c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000323  00000000  00000000  000029ab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000118  00000000  00000000  00002cd0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000be  00000000  00000000  00002de8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002cbe  00000000  00000000  00002ea6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000143b  00000000  00000000  00005b64  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009766  00000000  00000000  00006f9f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00010705  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000009c4  00000000  00000000  00010748  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000007c  00000000  00000000  0001110c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	2000005c 	.word	0x2000005c
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000d04 	.word	0x08000d04

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000060 	.word	0x20000060
 80001c4:	08000d04 	.word	0x08000d04

080001c8 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0

	uint32_t *pISPR1 = (uint32_t*)0XE000E204;
 80001ce:	4b09      	ldr	r3, [pc, #36]	@ (80001f4 <main+0x2c>)
 80001d0:	607b      	str	r3, [r7, #4]
	*pISPR1 |= (1 << 7);
 80001d2:	687b      	ldr	r3, [r7, #4]
 80001d4:	681b      	ldr	r3, [r3, #0]
 80001d6:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	601a      	str	r2, [r3, #0]

	uint32_t *pISER1 = (uint32_t*)0xE000E104;
 80001de:	4b06      	ldr	r3, [pc, #24]	@ (80001f8 <main+0x30>)
 80001e0:	603b      	str	r3, [r7, #0]
	*pISER1 |= (1 << 7);
 80001e2:	683b      	ldr	r3, [r7, #0]
 80001e4:	681b      	ldr	r3, [r3, #0]
 80001e6:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 80001ea:	683b      	ldr	r3, [r7, #0]
 80001ec:	601a      	str	r2, [r3, #0]

    /* Loop forever */
	for(;;);
 80001ee:	bf00      	nop
 80001f0:	e7fd      	b.n	80001ee <main+0x26>
 80001f2:	bf00      	nop
 80001f4:	e000e204 	.word	0xe000e204
 80001f8:	e000e104 	.word	0xe000e104

080001fc <USART3_IRQHandler>:
}

void USART3_IRQHandler(void){
 80001fc:	b580      	push	{r7, lr}
 80001fe:	af00      	add	r7, sp, #0
	printf("In USART3_IRQHandler\n");
 8000200:	4802      	ldr	r0, [pc, #8]	@ (800020c <USART3_IRQHandler+0x10>)
 8000202:	f000 f9eb 	bl	80005dc <puts>
}
 8000206:	bf00      	nop
 8000208:	bd80      	pop	{r7, pc}
 800020a:	bf00      	nop
 800020c:	08000d1c 	.word	0x08000d1c

08000210 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000210:	b580      	push	{r7, lr}
 8000212:	b086      	sub	sp, #24
 8000214:	af00      	add	r7, sp, #0
 8000216:	60f8      	str	r0, [r7, #12]
 8000218:	60b9      	str	r1, [r7, #8]
 800021a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800021c:	2300      	movs	r3, #0
 800021e:	617b      	str	r3, [r7, #20]
 8000220:	e00a      	b.n	8000238 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000222:	f3af 8000 	nop.w
 8000226:	4601      	mov	r1, r0
 8000228:	68bb      	ldr	r3, [r7, #8]
 800022a:	1c5a      	adds	r2, r3, #1
 800022c:	60ba      	str	r2, [r7, #8]
 800022e:	b2ca      	uxtb	r2, r1
 8000230:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000232:	697b      	ldr	r3, [r7, #20]
 8000234:	3301      	adds	r3, #1
 8000236:	617b      	str	r3, [r7, #20]
 8000238:	697a      	ldr	r2, [r7, #20]
 800023a:	687b      	ldr	r3, [r7, #4]
 800023c:	429a      	cmp	r2, r3
 800023e:	dbf0      	blt.n	8000222 <_read+0x12>
  }

  return len;
 8000240:	687b      	ldr	r3, [r7, #4]
}
 8000242:	4618      	mov	r0, r3
 8000244:	3718      	adds	r7, #24
 8000246:	46bd      	mov	sp, r7
 8000248:	bd80      	pop	{r7, pc}

0800024a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800024a:	b580      	push	{r7, lr}
 800024c:	b086      	sub	sp, #24
 800024e:	af00      	add	r7, sp, #0
 8000250:	60f8      	str	r0, [r7, #12]
 8000252:	60b9      	str	r1, [r7, #8]
 8000254:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000256:	2300      	movs	r3, #0
 8000258:	617b      	str	r3, [r7, #20]
 800025a:	e009      	b.n	8000270 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800025c:	68bb      	ldr	r3, [r7, #8]
 800025e:	1c5a      	adds	r2, r3, #1
 8000260:	60ba      	str	r2, [r7, #8]
 8000262:	781b      	ldrb	r3, [r3, #0]
 8000264:	4618      	mov	r0, r3
 8000266:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800026a:	697b      	ldr	r3, [r7, #20]
 800026c:	3301      	adds	r3, #1
 800026e:	617b      	str	r3, [r7, #20]
 8000270:	697a      	ldr	r2, [r7, #20]
 8000272:	687b      	ldr	r3, [r7, #4]
 8000274:	429a      	cmp	r2, r3
 8000276:	dbf1      	blt.n	800025c <_write+0x12>
  }
  return len;
 8000278:	687b      	ldr	r3, [r7, #4]
}
 800027a:	4618      	mov	r0, r3
 800027c:	3718      	adds	r7, #24
 800027e:	46bd      	mov	sp, r7
 8000280:	bd80      	pop	{r7, pc}

08000282 <_close>:

int _close(int file)
{
 8000282:	b480      	push	{r7}
 8000284:	b083      	sub	sp, #12
 8000286:	af00      	add	r7, sp, #0
 8000288:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800028a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800028e:	4618      	mov	r0, r3
 8000290:	370c      	adds	r7, #12
 8000292:	46bd      	mov	sp, r7
 8000294:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000298:	4770      	bx	lr

0800029a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800029a:	b480      	push	{r7}
 800029c:	b083      	sub	sp, #12
 800029e:	af00      	add	r7, sp, #0
 80002a0:	6078      	str	r0, [r7, #4]
 80002a2:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80002a4:	683b      	ldr	r3, [r7, #0]
 80002a6:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80002aa:	605a      	str	r2, [r3, #4]
  return 0;
 80002ac:	2300      	movs	r3, #0
}
 80002ae:	4618      	mov	r0, r3
 80002b0:	370c      	adds	r7, #12
 80002b2:	46bd      	mov	sp, r7
 80002b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002b8:	4770      	bx	lr

080002ba <_isatty>:

int _isatty(int file)
{
 80002ba:	b480      	push	{r7}
 80002bc:	b083      	sub	sp, #12
 80002be:	af00      	add	r7, sp, #0
 80002c0:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80002c2:	2301      	movs	r3, #1
}
 80002c4:	4618      	mov	r0, r3
 80002c6:	370c      	adds	r7, #12
 80002c8:	46bd      	mov	sp, r7
 80002ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ce:	4770      	bx	lr

080002d0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80002d0:	b480      	push	{r7}
 80002d2:	b085      	sub	sp, #20
 80002d4:	af00      	add	r7, sp, #0
 80002d6:	60f8      	str	r0, [r7, #12]
 80002d8:	60b9      	str	r1, [r7, #8]
 80002da:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80002dc:	2300      	movs	r3, #0
}
 80002de:	4618      	mov	r0, r3
 80002e0:	3714      	adds	r7, #20
 80002e2:	46bd      	mov	sp, r7
 80002e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002e8:	4770      	bx	lr
	...

080002ec <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80002ec:	b580      	push	{r7, lr}
 80002ee:	b086      	sub	sp, #24
 80002f0:	af00      	add	r7, sp, #0
 80002f2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80002f4:	4a14      	ldr	r2, [pc, #80]	@ (8000348 <_sbrk+0x5c>)
 80002f6:	4b15      	ldr	r3, [pc, #84]	@ (800034c <_sbrk+0x60>)
 80002f8:	1ad3      	subs	r3, r2, r3
 80002fa:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80002fc:	697b      	ldr	r3, [r7, #20]
 80002fe:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000300:	4b13      	ldr	r3, [pc, #76]	@ (8000350 <_sbrk+0x64>)
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	2b00      	cmp	r3, #0
 8000306:	d102      	bne.n	800030e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000308:	4b11      	ldr	r3, [pc, #68]	@ (8000350 <_sbrk+0x64>)
 800030a:	4a12      	ldr	r2, [pc, #72]	@ (8000354 <_sbrk+0x68>)
 800030c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800030e:	4b10      	ldr	r3, [pc, #64]	@ (8000350 <_sbrk+0x64>)
 8000310:	681a      	ldr	r2, [r3, #0]
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	4413      	add	r3, r2
 8000316:	693a      	ldr	r2, [r7, #16]
 8000318:	429a      	cmp	r2, r3
 800031a:	d207      	bcs.n	800032c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800031c:	f000 fa8c 	bl	8000838 <__errno>
 8000320:	4603      	mov	r3, r0
 8000322:	220c      	movs	r2, #12
 8000324:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000326:	f04f 33ff 	mov.w	r3, #4294967295
 800032a:	e009      	b.n	8000340 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800032c:	4b08      	ldr	r3, [pc, #32]	@ (8000350 <_sbrk+0x64>)
 800032e:	681b      	ldr	r3, [r3, #0]
 8000330:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000332:	4b07      	ldr	r3, [pc, #28]	@ (8000350 <_sbrk+0x64>)
 8000334:	681a      	ldr	r2, [r3, #0]
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	4413      	add	r3, r2
 800033a:	4a05      	ldr	r2, [pc, #20]	@ (8000350 <_sbrk+0x64>)
 800033c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800033e:	68fb      	ldr	r3, [r7, #12]
}
 8000340:	4618      	mov	r0, r3
 8000342:	3718      	adds	r7, #24
 8000344:	46bd      	mov	sp, r7
 8000346:	bd80      	pop	{r7, pc}
 8000348:	20020000 	.word	0x20020000
 800034c:	00000400 	.word	0x00000400
 8000350:	20000078 	.word	0x20000078
 8000354:	200001c8 	.word	0x200001c8

08000358 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000358:	480d      	ldr	r0, [pc, #52]	@ (8000390 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800035a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800035c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000360:	480c      	ldr	r0, [pc, #48]	@ (8000394 <LoopForever+0x6>)
  ldr r1, =_edata
 8000362:	490d      	ldr	r1, [pc, #52]	@ (8000398 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000364:	4a0d      	ldr	r2, [pc, #52]	@ (800039c <LoopForever+0xe>)
  movs r3, #0
 8000366:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000368:	e002      	b.n	8000370 <LoopCopyDataInit>

0800036a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800036a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800036c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800036e:	3304      	adds	r3, #4

08000370 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000370:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000372:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000374:	d3f9      	bcc.n	800036a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000376:	4a0a      	ldr	r2, [pc, #40]	@ (80003a0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000378:	4c0a      	ldr	r4, [pc, #40]	@ (80003a4 <LoopForever+0x16>)
  movs r3, #0
 800037a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800037c:	e001      	b.n	8000382 <LoopFillZerobss>

0800037e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800037e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000380:	3204      	adds	r2, #4

08000382 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000382:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000384:	d3fb      	bcc.n	800037e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000386:	f000 fa5d 	bl	8000844 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800038a:	f7ff ff1d 	bl	80001c8 <main>

0800038e <LoopForever>:

LoopForever:
  b LoopForever
 800038e:	e7fe      	b.n	800038e <LoopForever>
  ldr   r0, =_estack
 8000390:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000394:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000398:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 800039c:	08000d3c 	.word	0x08000d3c
  ldr r2, =_sbss
 80003a0:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80003a4:	200001c8 	.word	0x200001c8

080003a8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003a8:	e7fe      	b.n	80003a8 <ADC_IRQHandler>
	...

080003ac <std>:
 80003ac:	2300      	movs	r3, #0
 80003ae:	b510      	push	{r4, lr}
 80003b0:	4604      	mov	r4, r0
 80003b2:	e9c0 3300 	strd	r3, r3, [r0]
 80003b6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80003ba:	6083      	str	r3, [r0, #8]
 80003bc:	8181      	strh	r1, [r0, #12]
 80003be:	6643      	str	r3, [r0, #100]	@ 0x64
 80003c0:	81c2      	strh	r2, [r0, #14]
 80003c2:	6183      	str	r3, [r0, #24]
 80003c4:	4619      	mov	r1, r3
 80003c6:	2208      	movs	r2, #8
 80003c8:	305c      	adds	r0, #92	@ 0x5c
 80003ca:	f000 f9e7 	bl	800079c <memset>
 80003ce:	4b0d      	ldr	r3, [pc, #52]	@ (8000404 <std+0x58>)
 80003d0:	6263      	str	r3, [r4, #36]	@ 0x24
 80003d2:	4b0d      	ldr	r3, [pc, #52]	@ (8000408 <std+0x5c>)
 80003d4:	62a3      	str	r3, [r4, #40]	@ 0x28
 80003d6:	4b0d      	ldr	r3, [pc, #52]	@ (800040c <std+0x60>)
 80003d8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80003da:	4b0d      	ldr	r3, [pc, #52]	@ (8000410 <std+0x64>)
 80003dc:	6323      	str	r3, [r4, #48]	@ 0x30
 80003de:	4b0d      	ldr	r3, [pc, #52]	@ (8000414 <std+0x68>)
 80003e0:	6224      	str	r4, [r4, #32]
 80003e2:	429c      	cmp	r4, r3
 80003e4:	d006      	beq.n	80003f4 <std+0x48>
 80003e6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80003ea:	4294      	cmp	r4, r2
 80003ec:	d002      	beq.n	80003f4 <std+0x48>
 80003ee:	33d0      	adds	r3, #208	@ 0xd0
 80003f0:	429c      	cmp	r4, r3
 80003f2:	d105      	bne.n	8000400 <std+0x54>
 80003f4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80003f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80003fc:	f000 ba46 	b.w	800088c <__retarget_lock_init_recursive>
 8000400:	bd10      	pop	{r4, pc}
 8000402:	bf00      	nop
 8000404:	080005ed 	.word	0x080005ed
 8000408:	0800060f 	.word	0x0800060f
 800040c:	08000647 	.word	0x08000647
 8000410:	0800066b 	.word	0x0800066b
 8000414:	2000007c 	.word	0x2000007c

08000418 <stdio_exit_handler>:
 8000418:	4a02      	ldr	r2, [pc, #8]	@ (8000424 <stdio_exit_handler+0xc>)
 800041a:	4903      	ldr	r1, [pc, #12]	@ (8000428 <stdio_exit_handler+0x10>)
 800041c:	4803      	ldr	r0, [pc, #12]	@ (800042c <stdio_exit_handler+0x14>)
 800041e:	f000 b869 	b.w	80004f4 <_fwalk_sglue>
 8000422:	bf00      	nop
 8000424:	20000000 	.word	0x20000000
 8000428:	08000b8d 	.word	0x08000b8d
 800042c:	20000010 	.word	0x20000010

08000430 <cleanup_stdio>:
 8000430:	6841      	ldr	r1, [r0, #4]
 8000432:	4b0c      	ldr	r3, [pc, #48]	@ (8000464 <cleanup_stdio+0x34>)
 8000434:	4299      	cmp	r1, r3
 8000436:	b510      	push	{r4, lr}
 8000438:	4604      	mov	r4, r0
 800043a:	d001      	beq.n	8000440 <cleanup_stdio+0x10>
 800043c:	f000 fba6 	bl	8000b8c <_fflush_r>
 8000440:	68a1      	ldr	r1, [r4, #8]
 8000442:	4b09      	ldr	r3, [pc, #36]	@ (8000468 <cleanup_stdio+0x38>)
 8000444:	4299      	cmp	r1, r3
 8000446:	d002      	beq.n	800044e <cleanup_stdio+0x1e>
 8000448:	4620      	mov	r0, r4
 800044a:	f000 fb9f 	bl	8000b8c <_fflush_r>
 800044e:	68e1      	ldr	r1, [r4, #12]
 8000450:	4b06      	ldr	r3, [pc, #24]	@ (800046c <cleanup_stdio+0x3c>)
 8000452:	4299      	cmp	r1, r3
 8000454:	d004      	beq.n	8000460 <cleanup_stdio+0x30>
 8000456:	4620      	mov	r0, r4
 8000458:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800045c:	f000 bb96 	b.w	8000b8c <_fflush_r>
 8000460:	bd10      	pop	{r4, pc}
 8000462:	bf00      	nop
 8000464:	2000007c 	.word	0x2000007c
 8000468:	200000e4 	.word	0x200000e4
 800046c:	2000014c 	.word	0x2000014c

08000470 <global_stdio_init.part.0>:
 8000470:	b510      	push	{r4, lr}
 8000472:	4b0b      	ldr	r3, [pc, #44]	@ (80004a0 <global_stdio_init.part.0+0x30>)
 8000474:	4c0b      	ldr	r4, [pc, #44]	@ (80004a4 <global_stdio_init.part.0+0x34>)
 8000476:	4a0c      	ldr	r2, [pc, #48]	@ (80004a8 <global_stdio_init.part.0+0x38>)
 8000478:	601a      	str	r2, [r3, #0]
 800047a:	4620      	mov	r0, r4
 800047c:	2200      	movs	r2, #0
 800047e:	2104      	movs	r1, #4
 8000480:	f7ff ff94 	bl	80003ac <std>
 8000484:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000488:	2201      	movs	r2, #1
 800048a:	2109      	movs	r1, #9
 800048c:	f7ff ff8e 	bl	80003ac <std>
 8000490:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000494:	2202      	movs	r2, #2
 8000496:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800049a:	2112      	movs	r1, #18
 800049c:	f7ff bf86 	b.w	80003ac <std>
 80004a0:	200001b4 	.word	0x200001b4
 80004a4:	2000007c 	.word	0x2000007c
 80004a8:	08000419 	.word	0x08000419

080004ac <__sfp_lock_acquire>:
 80004ac:	4801      	ldr	r0, [pc, #4]	@ (80004b4 <__sfp_lock_acquire+0x8>)
 80004ae:	f000 b9ee 	b.w	800088e <__retarget_lock_acquire_recursive>
 80004b2:	bf00      	nop
 80004b4:	200001bd 	.word	0x200001bd

080004b8 <__sfp_lock_release>:
 80004b8:	4801      	ldr	r0, [pc, #4]	@ (80004c0 <__sfp_lock_release+0x8>)
 80004ba:	f000 b9e9 	b.w	8000890 <__retarget_lock_release_recursive>
 80004be:	bf00      	nop
 80004c0:	200001bd 	.word	0x200001bd

080004c4 <__sinit>:
 80004c4:	b510      	push	{r4, lr}
 80004c6:	4604      	mov	r4, r0
 80004c8:	f7ff fff0 	bl	80004ac <__sfp_lock_acquire>
 80004cc:	6a23      	ldr	r3, [r4, #32]
 80004ce:	b11b      	cbz	r3, 80004d8 <__sinit+0x14>
 80004d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004d4:	f7ff bff0 	b.w	80004b8 <__sfp_lock_release>
 80004d8:	4b04      	ldr	r3, [pc, #16]	@ (80004ec <__sinit+0x28>)
 80004da:	6223      	str	r3, [r4, #32]
 80004dc:	4b04      	ldr	r3, [pc, #16]	@ (80004f0 <__sinit+0x2c>)
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	2b00      	cmp	r3, #0
 80004e2:	d1f5      	bne.n	80004d0 <__sinit+0xc>
 80004e4:	f7ff ffc4 	bl	8000470 <global_stdio_init.part.0>
 80004e8:	e7f2      	b.n	80004d0 <__sinit+0xc>
 80004ea:	bf00      	nop
 80004ec:	08000431 	.word	0x08000431
 80004f0:	200001b4 	.word	0x200001b4

080004f4 <_fwalk_sglue>:
 80004f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80004f8:	4607      	mov	r7, r0
 80004fa:	4688      	mov	r8, r1
 80004fc:	4614      	mov	r4, r2
 80004fe:	2600      	movs	r6, #0
 8000500:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000504:	f1b9 0901 	subs.w	r9, r9, #1
 8000508:	d505      	bpl.n	8000516 <_fwalk_sglue+0x22>
 800050a:	6824      	ldr	r4, [r4, #0]
 800050c:	2c00      	cmp	r4, #0
 800050e:	d1f7      	bne.n	8000500 <_fwalk_sglue+0xc>
 8000510:	4630      	mov	r0, r6
 8000512:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000516:	89ab      	ldrh	r3, [r5, #12]
 8000518:	2b01      	cmp	r3, #1
 800051a:	d907      	bls.n	800052c <_fwalk_sglue+0x38>
 800051c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000520:	3301      	adds	r3, #1
 8000522:	d003      	beq.n	800052c <_fwalk_sglue+0x38>
 8000524:	4629      	mov	r1, r5
 8000526:	4638      	mov	r0, r7
 8000528:	47c0      	blx	r8
 800052a:	4306      	orrs	r6, r0
 800052c:	3568      	adds	r5, #104	@ 0x68
 800052e:	e7e9      	b.n	8000504 <_fwalk_sglue+0x10>

08000530 <_puts_r>:
 8000530:	6a03      	ldr	r3, [r0, #32]
 8000532:	b570      	push	{r4, r5, r6, lr}
 8000534:	6884      	ldr	r4, [r0, #8]
 8000536:	4605      	mov	r5, r0
 8000538:	460e      	mov	r6, r1
 800053a:	b90b      	cbnz	r3, 8000540 <_puts_r+0x10>
 800053c:	f7ff ffc2 	bl	80004c4 <__sinit>
 8000540:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000542:	07db      	lsls	r3, r3, #31
 8000544:	d405      	bmi.n	8000552 <_puts_r+0x22>
 8000546:	89a3      	ldrh	r3, [r4, #12]
 8000548:	0598      	lsls	r0, r3, #22
 800054a:	d402      	bmi.n	8000552 <_puts_r+0x22>
 800054c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800054e:	f000 f99e 	bl	800088e <__retarget_lock_acquire_recursive>
 8000552:	89a3      	ldrh	r3, [r4, #12]
 8000554:	0719      	lsls	r1, r3, #28
 8000556:	d502      	bpl.n	800055e <_puts_r+0x2e>
 8000558:	6923      	ldr	r3, [r4, #16]
 800055a:	2b00      	cmp	r3, #0
 800055c:	d135      	bne.n	80005ca <_puts_r+0x9a>
 800055e:	4621      	mov	r1, r4
 8000560:	4628      	mov	r0, r5
 8000562:	f000 f8c5 	bl	80006f0 <__swsetup_r>
 8000566:	b380      	cbz	r0, 80005ca <_puts_r+0x9a>
 8000568:	f04f 35ff 	mov.w	r5, #4294967295
 800056c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800056e:	07da      	lsls	r2, r3, #31
 8000570:	d405      	bmi.n	800057e <_puts_r+0x4e>
 8000572:	89a3      	ldrh	r3, [r4, #12]
 8000574:	059b      	lsls	r3, r3, #22
 8000576:	d402      	bmi.n	800057e <_puts_r+0x4e>
 8000578:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800057a:	f000 f989 	bl	8000890 <__retarget_lock_release_recursive>
 800057e:	4628      	mov	r0, r5
 8000580:	bd70      	pop	{r4, r5, r6, pc}
 8000582:	2b00      	cmp	r3, #0
 8000584:	da04      	bge.n	8000590 <_puts_r+0x60>
 8000586:	69a2      	ldr	r2, [r4, #24]
 8000588:	429a      	cmp	r2, r3
 800058a:	dc17      	bgt.n	80005bc <_puts_r+0x8c>
 800058c:	290a      	cmp	r1, #10
 800058e:	d015      	beq.n	80005bc <_puts_r+0x8c>
 8000590:	6823      	ldr	r3, [r4, #0]
 8000592:	1c5a      	adds	r2, r3, #1
 8000594:	6022      	str	r2, [r4, #0]
 8000596:	7019      	strb	r1, [r3, #0]
 8000598:	68a3      	ldr	r3, [r4, #8]
 800059a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800059e:	3b01      	subs	r3, #1
 80005a0:	60a3      	str	r3, [r4, #8]
 80005a2:	2900      	cmp	r1, #0
 80005a4:	d1ed      	bne.n	8000582 <_puts_r+0x52>
 80005a6:	2b00      	cmp	r3, #0
 80005a8:	da11      	bge.n	80005ce <_puts_r+0x9e>
 80005aa:	4622      	mov	r2, r4
 80005ac:	210a      	movs	r1, #10
 80005ae:	4628      	mov	r0, r5
 80005b0:	f000 f85f 	bl	8000672 <__swbuf_r>
 80005b4:	3001      	adds	r0, #1
 80005b6:	d0d7      	beq.n	8000568 <_puts_r+0x38>
 80005b8:	250a      	movs	r5, #10
 80005ba:	e7d7      	b.n	800056c <_puts_r+0x3c>
 80005bc:	4622      	mov	r2, r4
 80005be:	4628      	mov	r0, r5
 80005c0:	f000 f857 	bl	8000672 <__swbuf_r>
 80005c4:	3001      	adds	r0, #1
 80005c6:	d1e7      	bne.n	8000598 <_puts_r+0x68>
 80005c8:	e7ce      	b.n	8000568 <_puts_r+0x38>
 80005ca:	3e01      	subs	r6, #1
 80005cc:	e7e4      	b.n	8000598 <_puts_r+0x68>
 80005ce:	6823      	ldr	r3, [r4, #0]
 80005d0:	1c5a      	adds	r2, r3, #1
 80005d2:	6022      	str	r2, [r4, #0]
 80005d4:	220a      	movs	r2, #10
 80005d6:	701a      	strb	r2, [r3, #0]
 80005d8:	e7ee      	b.n	80005b8 <_puts_r+0x88>
	...

080005dc <puts>:
 80005dc:	4b02      	ldr	r3, [pc, #8]	@ (80005e8 <puts+0xc>)
 80005de:	4601      	mov	r1, r0
 80005e0:	6818      	ldr	r0, [r3, #0]
 80005e2:	f7ff bfa5 	b.w	8000530 <_puts_r>
 80005e6:	bf00      	nop
 80005e8:	2000000c 	.word	0x2000000c

080005ec <__sread>:
 80005ec:	b510      	push	{r4, lr}
 80005ee:	460c      	mov	r4, r1
 80005f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005f4:	f000 f8fc 	bl	80007f0 <_read_r>
 80005f8:	2800      	cmp	r0, #0
 80005fa:	bfab      	itete	ge
 80005fc:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80005fe:	89a3      	ldrhlt	r3, [r4, #12]
 8000600:	181b      	addge	r3, r3, r0
 8000602:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000606:	bfac      	ite	ge
 8000608:	6563      	strge	r3, [r4, #84]	@ 0x54
 800060a:	81a3      	strhlt	r3, [r4, #12]
 800060c:	bd10      	pop	{r4, pc}

0800060e <__swrite>:
 800060e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000612:	461f      	mov	r7, r3
 8000614:	898b      	ldrh	r3, [r1, #12]
 8000616:	05db      	lsls	r3, r3, #23
 8000618:	4605      	mov	r5, r0
 800061a:	460c      	mov	r4, r1
 800061c:	4616      	mov	r6, r2
 800061e:	d505      	bpl.n	800062c <__swrite+0x1e>
 8000620:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000624:	2302      	movs	r3, #2
 8000626:	2200      	movs	r2, #0
 8000628:	f000 f8d0 	bl	80007cc <_lseek_r>
 800062c:	89a3      	ldrh	r3, [r4, #12]
 800062e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000632:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000636:	81a3      	strh	r3, [r4, #12]
 8000638:	4632      	mov	r2, r6
 800063a:	463b      	mov	r3, r7
 800063c:	4628      	mov	r0, r5
 800063e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000642:	f000 b8e7 	b.w	8000814 <_write_r>

08000646 <__sseek>:
 8000646:	b510      	push	{r4, lr}
 8000648:	460c      	mov	r4, r1
 800064a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800064e:	f000 f8bd 	bl	80007cc <_lseek_r>
 8000652:	1c43      	adds	r3, r0, #1
 8000654:	89a3      	ldrh	r3, [r4, #12]
 8000656:	bf15      	itete	ne
 8000658:	6560      	strne	r0, [r4, #84]	@ 0x54
 800065a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800065e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000662:	81a3      	strheq	r3, [r4, #12]
 8000664:	bf18      	it	ne
 8000666:	81a3      	strhne	r3, [r4, #12]
 8000668:	bd10      	pop	{r4, pc}

0800066a <__sclose>:
 800066a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800066e:	f000 b89d 	b.w	80007ac <_close_r>

08000672 <__swbuf_r>:
 8000672:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000674:	460e      	mov	r6, r1
 8000676:	4614      	mov	r4, r2
 8000678:	4605      	mov	r5, r0
 800067a:	b118      	cbz	r0, 8000684 <__swbuf_r+0x12>
 800067c:	6a03      	ldr	r3, [r0, #32]
 800067e:	b90b      	cbnz	r3, 8000684 <__swbuf_r+0x12>
 8000680:	f7ff ff20 	bl	80004c4 <__sinit>
 8000684:	69a3      	ldr	r3, [r4, #24]
 8000686:	60a3      	str	r3, [r4, #8]
 8000688:	89a3      	ldrh	r3, [r4, #12]
 800068a:	071a      	lsls	r2, r3, #28
 800068c:	d501      	bpl.n	8000692 <__swbuf_r+0x20>
 800068e:	6923      	ldr	r3, [r4, #16]
 8000690:	b943      	cbnz	r3, 80006a4 <__swbuf_r+0x32>
 8000692:	4621      	mov	r1, r4
 8000694:	4628      	mov	r0, r5
 8000696:	f000 f82b 	bl	80006f0 <__swsetup_r>
 800069a:	b118      	cbz	r0, 80006a4 <__swbuf_r+0x32>
 800069c:	f04f 37ff 	mov.w	r7, #4294967295
 80006a0:	4638      	mov	r0, r7
 80006a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80006a4:	6823      	ldr	r3, [r4, #0]
 80006a6:	6922      	ldr	r2, [r4, #16]
 80006a8:	1a98      	subs	r0, r3, r2
 80006aa:	6963      	ldr	r3, [r4, #20]
 80006ac:	b2f6      	uxtb	r6, r6
 80006ae:	4283      	cmp	r3, r0
 80006b0:	4637      	mov	r7, r6
 80006b2:	dc05      	bgt.n	80006c0 <__swbuf_r+0x4e>
 80006b4:	4621      	mov	r1, r4
 80006b6:	4628      	mov	r0, r5
 80006b8:	f000 fa68 	bl	8000b8c <_fflush_r>
 80006bc:	2800      	cmp	r0, #0
 80006be:	d1ed      	bne.n	800069c <__swbuf_r+0x2a>
 80006c0:	68a3      	ldr	r3, [r4, #8]
 80006c2:	3b01      	subs	r3, #1
 80006c4:	60a3      	str	r3, [r4, #8]
 80006c6:	6823      	ldr	r3, [r4, #0]
 80006c8:	1c5a      	adds	r2, r3, #1
 80006ca:	6022      	str	r2, [r4, #0]
 80006cc:	701e      	strb	r6, [r3, #0]
 80006ce:	6962      	ldr	r2, [r4, #20]
 80006d0:	1c43      	adds	r3, r0, #1
 80006d2:	429a      	cmp	r2, r3
 80006d4:	d004      	beq.n	80006e0 <__swbuf_r+0x6e>
 80006d6:	89a3      	ldrh	r3, [r4, #12]
 80006d8:	07db      	lsls	r3, r3, #31
 80006da:	d5e1      	bpl.n	80006a0 <__swbuf_r+0x2e>
 80006dc:	2e0a      	cmp	r6, #10
 80006de:	d1df      	bne.n	80006a0 <__swbuf_r+0x2e>
 80006e0:	4621      	mov	r1, r4
 80006e2:	4628      	mov	r0, r5
 80006e4:	f000 fa52 	bl	8000b8c <_fflush_r>
 80006e8:	2800      	cmp	r0, #0
 80006ea:	d0d9      	beq.n	80006a0 <__swbuf_r+0x2e>
 80006ec:	e7d6      	b.n	800069c <__swbuf_r+0x2a>
	...

080006f0 <__swsetup_r>:
 80006f0:	b538      	push	{r3, r4, r5, lr}
 80006f2:	4b29      	ldr	r3, [pc, #164]	@ (8000798 <__swsetup_r+0xa8>)
 80006f4:	4605      	mov	r5, r0
 80006f6:	6818      	ldr	r0, [r3, #0]
 80006f8:	460c      	mov	r4, r1
 80006fa:	b118      	cbz	r0, 8000704 <__swsetup_r+0x14>
 80006fc:	6a03      	ldr	r3, [r0, #32]
 80006fe:	b90b      	cbnz	r3, 8000704 <__swsetup_r+0x14>
 8000700:	f7ff fee0 	bl	80004c4 <__sinit>
 8000704:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000708:	0719      	lsls	r1, r3, #28
 800070a:	d422      	bmi.n	8000752 <__swsetup_r+0x62>
 800070c:	06da      	lsls	r2, r3, #27
 800070e:	d407      	bmi.n	8000720 <__swsetup_r+0x30>
 8000710:	2209      	movs	r2, #9
 8000712:	602a      	str	r2, [r5, #0]
 8000714:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000718:	81a3      	strh	r3, [r4, #12]
 800071a:	f04f 30ff 	mov.w	r0, #4294967295
 800071e:	e033      	b.n	8000788 <__swsetup_r+0x98>
 8000720:	0758      	lsls	r0, r3, #29
 8000722:	d512      	bpl.n	800074a <__swsetup_r+0x5a>
 8000724:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000726:	b141      	cbz	r1, 800073a <__swsetup_r+0x4a>
 8000728:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800072c:	4299      	cmp	r1, r3
 800072e:	d002      	beq.n	8000736 <__swsetup_r+0x46>
 8000730:	4628      	mov	r0, r5
 8000732:	f000 f8af 	bl	8000894 <_free_r>
 8000736:	2300      	movs	r3, #0
 8000738:	6363      	str	r3, [r4, #52]	@ 0x34
 800073a:	89a3      	ldrh	r3, [r4, #12]
 800073c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000740:	81a3      	strh	r3, [r4, #12]
 8000742:	2300      	movs	r3, #0
 8000744:	6063      	str	r3, [r4, #4]
 8000746:	6923      	ldr	r3, [r4, #16]
 8000748:	6023      	str	r3, [r4, #0]
 800074a:	89a3      	ldrh	r3, [r4, #12]
 800074c:	f043 0308 	orr.w	r3, r3, #8
 8000750:	81a3      	strh	r3, [r4, #12]
 8000752:	6923      	ldr	r3, [r4, #16]
 8000754:	b94b      	cbnz	r3, 800076a <__swsetup_r+0x7a>
 8000756:	89a3      	ldrh	r3, [r4, #12]
 8000758:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800075c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000760:	d003      	beq.n	800076a <__swsetup_r+0x7a>
 8000762:	4621      	mov	r1, r4
 8000764:	4628      	mov	r0, r5
 8000766:	f000 fa5f 	bl	8000c28 <__smakebuf_r>
 800076a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800076e:	f013 0201 	ands.w	r2, r3, #1
 8000772:	d00a      	beq.n	800078a <__swsetup_r+0x9a>
 8000774:	2200      	movs	r2, #0
 8000776:	60a2      	str	r2, [r4, #8]
 8000778:	6962      	ldr	r2, [r4, #20]
 800077a:	4252      	negs	r2, r2
 800077c:	61a2      	str	r2, [r4, #24]
 800077e:	6922      	ldr	r2, [r4, #16]
 8000780:	b942      	cbnz	r2, 8000794 <__swsetup_r+0xa4>
 8000782:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8000786:	d1c5      	bne.n	8000714 <__swsetup_r+0x24>
 8000788:	bd38      	pop	{r3, r4, r5, pc}
 800078a:	0799      	lsls	r1, r3, #30
 800078c:	bf58      	it	pl
 800078e:	6962      	ldrpl	r2, [r4, #20]
 8000790:	60a2      	str	r2, [r4, #8]
 8000792:	e7f4      	b.n	800077e <__swsetup_r+0x8e>
 8000794:	2000      	movs	r0, #0
 8000796:	e7f7      	b.n	8000788 <__swsetup_r+0x98>
 8000798:	2000000c 	.word	0x2000000c

0800079c <memset>:
 800079c:	4402      	add	r2, r0
 800079e:	4603      	mov	r3, r0
 80007a0:	4293      	cmp	r3, r2
 80007a2:	d100      	bne.n	80007a6 <memset+0xa>
 80007a4:	4770      	bx	lr
 80007a6:	f803 1b01 	strb.w	r1, [r3], #1
 80007aa:	e7f9      	b.n	80007a0 <memset+0x4>

080007ac <_close_r>:
 80007ac:	b538      	push	{r3, r4, r5, lr}
 80007ae:	4d06      	ldr	r5, [pc, #24]	@ (80007c8 <_close_r+0x1c>)
 80007b0:	2300      	movs	r3, #0
 80007b2:	4604      	mov	r4, r0
 80007b4:	4608      	mov	r0, r1
 80007b6:	602b      	str	r3, [r5, #0]
 80007b8:	f7ff fd63 	bl	8000282 <_close>
 80007bc:	1c43      	adds	r3, r0, #1
 80007be:	d102      	bne.n	80007c6 <_close_r+0x1a>
 80007c0:	682b      	ldr	r3, [r5, #0]
 80007c2:	b103      	cbz	r3, 80007c6 <_close_r+0x1a>
 80007c4:	6023      	str	r3, [r4, #0]
 80007c6:	bd38      	pop	{r3, r4, r5, pc}
 80007c8:	200001b8 	.word	0x200001b8

080007cc <_lseek_r>:
 80007cc:	b538      	push	{r3, r4, r5, lr}
 80007ce:	4d07      	ldr	r5, [pc, #28]	@ (80007ec <_lseek_r+0x20>)
 80007d0:	4604      	mov	r4, r0
 80007d2:	4608      	mov	r0, r1
 80007d4:	4611      	mov	r1, r2
 80007d6:	2200      	movs	r2, #0
 80007d8:	602a      	str	r2, [r5, #0]
 80007da:	461a      	mov	r2, r3
 80007dc:	f7ff fd78 	bl	80002d0 <_lseek>
 80007e0:	1c43      	adds	r3, r0, #1
 80007e2:	d102      	bne.n	80007ea <_lseek_r+0x1e>
 80007e4:	682b      	ldr	r3, [r5, #0]
 80007e6:	b103      	cbz	r3, 80007ea <_lseek_r+0x1e>
 80007e8:	6023      	str	r3, [r4, #0]
 80007ea:	bd38      	pop	{r3, r4, r5, pc}
 80007ec:	200001b8 	.word	0x200001b8

080007f0 <_read_r>:
 80007f0:	b538      	push	{r3, r4, r5, lr}
 80007f2:	4d07      	ldr	r5, [pc, #28]	@ (8000810 <_read_r+0x20>)
 80007f4:	4604      	mov	r4, r0
 80007f6:	4608      	mov	r0, r1
 80007f8:	4611      	mov	r1, r2
 80007fa:	2200      	movs	r2, #0
 80007fc:	602a      	str	r2, [r5, #0]
 80007fe:	461a      	mov	r2, r3
 8000800:	f7ff fd06 	bl	8000210 <_read>
 8000804:	1c43      	adds	r3, r0, #1
 8000806:	d102      	bne.n	800080e <_read_r+0x1e>
 8000808:	682b      	ldr	r3, [r5, #0]
 800080a:	b103      	cbz	r3, 800080e <_read_r+0x1e>
 800080c:	6023      	str	r3, [r4, #0]
 800080e:	bd38      	pop	{r3, r4, r5, pc}
 8000810:	200001b8 	.word	0x200001b8

08000814 <_write_r>:
 8000814:	b538      	push	{r3, r4, r5, lr}
 8000816:	4d07      	ldr	r5, [pc, #28]	@ (8000834 <_write_r+0x20>)
 8000818:	4604      	mov	r4, r0
 800081a:	4608      	mov	r0, r1
 800081c:	4611      	mov	r1, r2
 800081e:	2200      	movs	r2, #0
 8000820:	602a      	str	r2, [r5, #0]
 8000822:	461a      	mov	r2, r3
 8000824:	f7ff fd11 	bl	800024a <_write>
 8000828:	1c43      	adds	r3, r0, #1
 800082a:	d102      	bne.n	8000832 <_write_r+0x1e>
 800082c:	682b      	ldr	r3, [r5, #0]
 800082e:	b103      	cbz	r3, 8000832 <_write_r+0x1e>
 8000830:	6023      	str	r3, [r4, #0]
 8000832:	bd38      	pop	{r3, r4, r5, pc}
 8000834:	200001b8 	.word	0x200001b8

08000838 <__errno>:
 8000838:	4b01      	ldr	r3, [pc, #4]	@ (8000840 <__errno+0x8>)
 800083a:	6818      	ldr	r0, [r3, #0]
 800083c:	4770      	bx	lr
 800083e:	bf00      	nop
 8000840:	2000000c 	.word	0x2000000c

08000844 <__libc_init_array>:
 8000844:	b570      	push	{r4, r5, r6, lr}
 8000846:	4d0d      	ldr	r5, [pc, #52]	@ (800087c <__libc_init_array+0x38>)
 8000848:	4c0d      	ldr	r4, [pc, #52]	@ (8000880 <__libc_init_array+0x3c>)
 800084a:	1b64      	subs	r4, r4, r5
 800084c:	10a4      	asrs	r4, r4, #2
 800084e:	2600      	movs	r6, #0
 8000850:	42a6      	cmp	r6, r4
 8000852:	d109      	bne.n	8000868 <__libc_init_array+0x24>
 8000854:	4d0b      	ldr	r5, [pc, #44]	@ (8000884 <__libc_init_array+0x40>)
 8000856:	4c0c      	ldr	r4, [pc, #48]	@ (8000888 <__libc_init_array+0x44>)
 8000858:	f000 fa54 	bl	8000d04 <_init>
 800085c:	1b64      	subs	r4, r4, r5
 800085e:	10a4      	asrs	r4, r4, #2
 8000860:	2600      	movs	r6, #0
 8000862:	42a6      	cmp	r6, r4
 8000864:	d105      	bne.n	8000872 <__libc_init_array+0x2e>
 8000866:	bd70      	pop	{r4, r5, r6, pc}
 8000868:	f855 3b04 	ldr.w	r3, [r5], #4
 800086c:	4798      	blx	r3
 800086e:	3601      	adds	r6, #1
 8000870:	e7ee      	b.n	8000850 <__libc_init_array+0xc>
 8000872:	f855 3b04 	ldr.w	r3, [r5], #4
 8000876:	4798      	blx	r3
 8000878:	3601      	adds	r6, #1
 800087a:	e7f2      	b.n	8000862 <__libc_init_array+0x1e>
 800087c:	08000d34 	.word	0x08000d34
 8000880:	08000d34 	.word	0x08000d34
 8000884:	08000d34 	.word	0x08000d34
 8000888:	08000d38 	.word	0x08000d38

0800088c <__retarget_lock_init_recursive>:
 800088c:	4770      	bx	lr

0800088e <__retarget_lock_acquire_recursive>:
 800088e:	4770      	bx	lr

08000890 <__retarget_lock_release_recursive>:
 8000890:	4770      	bx	lr
	...

08000894 <_free_r>:
 8000894:	b538      	push	{r3, r4, r5, lr}
 8000896:	4605      	mov	r5, r0
 8000898:	2900      	cmp	r1, #0
 800089a:	d041      	beq.n	8000920 <_free_r+0x8c>
 800089c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80008a0:	1f0c      	subs	r4, r1, #4
 80008a2:	2b00      	cmp	r3, #0
 80008a4:	bfb8      	it	lt
 80008a6:	18e4      	addlt	r4, r4, r3
 80008a8:	f000 f8e0 	bl	8000a6c <__malloc_lock>
 80008ac:	4a1d      	ldr	r2, [pc, #116]	@ (8000924 <_free_r+0x90>)
 80008ae:	6813      	ldr	r3, [r2, #0]
 80008b0:	b933      	cbnz	r3, 80008c0 <_free_r+0x2c>
 80008b2:	6063      	str	r3, [r4, #4]
 80008b4:	6014      	str	r4, [r2, #0]
 80008b6:	4628      	mov	r0, r5
 80008b8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80008bc:	f000 b8dc 	b.w	8000a78 <__malloc_unlock>
 80008c0:	42a3      	cmp	r3, r4
 80008c2:	d908      	bls.n	80008d6 <_free_r+0x42>
 80008c4:	6820      	ldr	r0, [r4, #0]
 80008c6:	1821      	adds	r1, r4, r0
 80008c8:	428b      	cmp	r3, r1
 80008ca:	bf01      	itttt	eq
 80008cc:	6819      	ldreq	r1, [r3, #0]
 80008ce:	685b      	ldreq	r3, [r3, #4]
 80008d0:	1809      	addeq	r1, r1, r0
 80008d2:	6021      	streq	r1, [r4, #0]
 80008d4:	e7ed      	b.n	80008b2 <_free_r+0x1e>
 80008d6:	461a      	mov	r2, r3
 80008d8:	685b      	ldr	r3, [r3, #4]
 80008da:	b10b      	cbz	r3, 80008e0 <_free_r+0x4c>
 80008dc:	42a3      	cmp	r3, r4
 80008de:	d9fa      	bls.n	80008d6 <_free_r+0x42>
 80008e0:	6811      	ldr	r1, [r2, #0]
 80008e2:	1850      	adds	r0, r2, r1
 80008e4:	42a0      	cmp	r0, r4
 80008e6:	d10b      	bne.n	8000900 <_free_r+0x6c>
 80008e8:	6820      	ldr	r0, [r4, #0]
 80008ea:	4401      	add	r1, r0
 80008ec:	1850      	adds	r0, r2, r1
 80008ee:	4283      	cmp	r3, r0
 80008f0:	6011      	str	r1, [r2, #0]
 80008f2:	d1e0      	bne.n	80008b6 <_free_r+0x22>
 80008f4:	6818      	ldr	r0, [r3, #0]
 80008f6:	685b      	ldr	r3, [r3, #4]
 80008f8:	6053      	str	r3, [r2, #4]
 80008fa:	4408      	add	r0, r1
 80008fc:	6010      	str	r0, [r2, #0]
 80008fe:	e7da      	b.n	80008b6 <_free_r+0x22>
 8000900:	d902      	bls.n	8000908 <_free_r+0x74>
 8000902:	230c      	movs	r3, #12
 8000904:	602b      	str	r3, [r5, #0]
 8000906:	e7d6      	b.n	80008b6 <_free_r+0x22>
 8000908:	6820      	ldr	r0, [r4, #0]
 800090a:	1821      	adds	r1, r4, r0
 800090c:	428b      	cmp	r3, r1
 800090e:	bf04      	itt	eq
 8000910:	6819      	ldreq	r1, [r3, #0]
 8000912:	685b      	ldreq	r3, [r3, #4]
 8000914:	6063      	str	r3, [r4, #4]
 8000916:	bf04      	itt	eq
 8000918:	1809      	addeq	r1, r1, r0
 800091a:	6021      	streq	r1, [r4, #0]
 800091c:	6054      	str	r4, [r2, #4]
 800091e:	e7ca      	b.n	80008b6 <_free_r+0x22>
 8000920:	bd38      	pop	{r3, r4, r5, pc}
 8000922:	bf00      	nop
 8000924:	200001c4 	.word	0x200001c4

08000928 <sbrk_aligned>:
 8000928:	b570      	push	{r4, r5, r6, lr}
 800092a:	4e0f      	ldr	r6, [pc, #60]	@ (8000968 <sbrk_aligned+0x40>)
 800092c:	460c      	mov	r4, r1
 800092e:	6831      	ldr	r1, [r6, #0]
 8000930:	4605      	mov	r5, r0
 8000932:	b911      	cbnz	r1, 800093a <sbrk_aligned+0x12>
 8000934:	f000 f9d6 	bl	8000ce4 <_sbrk_r>
 8000938:	6030      	str	r0, [r6, #0]
 800093a:	4621      	mov	r1, r4
 800093c:	4628      	mov	r0, r5
 800093e:	f000 f9d1 	bl	8000ce4 <_sbrk_r>
 8000942:	1c43      	adds	r3, r0, #1
 8000944:	d103      	bne.n	800094e <sbrk_aligned+0x26>
 8000946:	f04f 34ff 	mov.w	r4, #4294967295
 800094a:	4620      	mov	r0, r4
 800094c:	bd70      	pop	{r4, r5, r6, pc}
 800094e:	1cc4      	adds	r4, r0, #3
 8000950:	f024 0403 	bic.w	r4, r4, #3
 8000954:	42a0      	cmp	r0, r4
 8000956:	d0f8      	beq.n	800094a <sbrk_aligned+0x22>
 8000958:	1a21      	subs	r1, r4, r0
 800095a:	4628      	mov	r0, r5
 800095c:	f000 f9c2 	bl	8000ce4 <_sbrk_r>
 8000960:	3001      	adds	r0, #1
 8000962:	d1f2      	bne.n	800094a <sbrk_aligned+0x22>
 8000964:	e7ef      	b.n	8000946 <sbrk_aligned+0x1e>
 8000966:	bf00      	nop
 8000968:	200001c0 	.word	0x200001c0

0800096c <_malloc_r>:
 800096c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000970:	1ccd      	adds	r5, r1, #3
 8000972:	f025 0503 	bic.w	r5, r5, #3
 8000976:	3508      	adds	r5, #8
 8000978:	2d0c      	cmp	r5, #12
 800097a:	bf38      	it	cc
 800097c:	250c      	movcc	r5, #12
 800097e:	2d00      	cmp	r5, #0
 8000980:	4606      	mov	r6, r0
 8000982:	db01      	blt.n	8000988 <_malloc_r+0x1c>
 8000984:	42a9      	cmp	r1, r5
 8000986:	d904      	bls.n	8000992 <_malloc_r+0x26>
 8000988:	230c      	movs	r3, #12
 800098a:	6033      	str	r3, [r6, #0]
 800098c:	2000      	movs	r0, #0
 800098e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000992:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000a68 <_malloc_r+0xfc>
 8000996:	f000 f869 	bl	8000a6c <__malloc_lock>
 800099a:	f8d8 3000 	ldr.w	r3, [r8]
 800099e:	461c      	mov	r4, r3
 80009a0:	bb44      	cbnz	r4, 80009f4 <_malloc_r+0x88>
 80009a2:	4629      	mov	r1, r5
 80009a4:	4630      	mov	r0, r6
 80009a6:	f7ff ffbf 	bl	8000928 <sbrk_aligned>
 80009aa:	1c43      	adds	r3, r0, #1
 80009ac:	4604      	mov	r4, r0
 80009ae:	d158      	bne.n	8000a62 <_malloc_r+0xf6>
 80009b0:	f8d8 4000 	ldr.w	r4, [r8]
 80009b4:	4627      	mov	r7, r4
 80009b6:	2f00      	cmp	r7, #0
 80009b8:	d143      	bne.n	8000a42 <_malloc_r+0xd6>
 80009ba:	2c00      	cmp	r4, #0
 80009bc:	d04b      	beq.n	8000a56 <_malloc_r+0xea>
 80009be:	6823      	ldr	r3, [r4, #0]
 80009c0:	4639      	mov	r1, r7
 80009c2:	4630      	mov	r0, r6
 80009c4:	eb04 0903 	add.w	r9, r4, r3
 80009c8:	f000 f98c 	bl	8000ce4 <_sbrk_r>
 80009cc:	4581      	cmp	r9, r0
 80009ce:	d142      	bne.n	8000a56 <_malloc_r+0xea>
 80009d0:	6821      	ldr	r1, [r4, #0]
 80009d2:	1a6d      	subs	r5, r5, r1
 80009d4:	4629      	mov	r1, r5
 80009d6:	4630      	mov	r0, r6
 80009d8:	f7ff ffa6 	bl	8000928 <sbrk_aligned>
 80009dc:	3001      	adds	r0, #1
 80009de:	d03a      	beq.n	8000a56 <_malloc_r+0xea>
 80009e0:	6823      	ldr	r3, [r4, #0]
 80009e2:	442b      	add	r3, r5
 80009e4:	6023      	str	r3, [r4, #0]
 80009e6:	f8d8 3000 	ldr.w	r3, [r8]
 80009ea:	685a      	ldr	r2, [r3, #4]
 80009ec:	bb62      	cbnz	r2, 8000a48 <_malloc_r+0xdc>
 80009ee:	f8c8 7000 	str.w	r7, [r8]
 80009f2:	e00f      	b.n	8000a14 <_malloc_r+0xa8>
 80009f4:	6822      	ldr	r2, [r4, #0]
 80009f6:	1b52      	subs	r2, r2, r5
 80009f8:	d420      	bmi.n	8000a3c <_malloc_r+0xd0>
 80009fa:	2a0b      	cmp	r2, #11
 80009fc:	d917      	bls.n	8000a2e <_malloc_r+0xc2>
 80009fe:	1961      	adds	r1, r4, r5
 8000a00:	42a3      	cmp	r3, r4
 8000a02:	6025      	str	r5, [r4, #0]
 8000a04:	bf18      	it	ne
 8000a06:	6059      	strne	r1, [r3, #4]
 8000a08:	6863      	ldr	r3, [r4, #4]
 8000a0a:	bf08      	it	eq
 8000a0c:	f8c8 1000 	streq.w	r1, [r8]
 8000a10:	5162      	str	r2, [r4, r5]
 8000a12:	604b      	str	r3, [r1, #4]
 8000a14:	4630      	mov	r0, r6
 8000a16:	f000 f82f 	bl	8000a78 <__malloc_unlock>
 8000a1a:	f104 000b 	add.w	r0, r4, #11
 8000a1e:	1d23      	adds	r3, r4, #4
 8000a20:	f020 0007 	bic.w	r0, r0, #7
 8000a24:	1ac2      	subs	r2, r0, r3
 8000a26:	bf1c      	itt	ne
 8000a28:	1a1b      	subne	r3, r3, r0
 8000a2a:	50a3      	strne	r3, [r4, r2]
 8000a2c:	e7af      	b.n	800098e <_malloc_r+0x22>
 8000a2e:	6862      	ldr	r2, [r4, #4]
 8000a30:	42a3      	cmp	r3, r4
 8000a32:	bf0c      	ite	eq
 8000a34:	f8c8 2000 	streq.w	r2, [r8]
 8000a38:	605a      	strne	r2, [r3, #4]
 8000a3a:	e7eb      	b.n	8000a14 <_malloc_r+0xa8>
 8000a3c:	4623      	mov	r3, r4
 8000a3e:	6864      	ldr	r4, [r4, #4]
 8000a40:	e7ae      	b.n	80009a0 <_malloc_r+0x34>
 8000a42:	463c      	mov	r4, r7
 8000a44:	687f      	ldr	r7, [r7, #4]
 8000a46:	e7b6      	b.n	80009b6 <_malloc_r+0x4a>
 8000a48:	461a      	mov	r2, r3
 8000a4a:	685b      	ldr	r3, [r3, #4]
 8000a4c:	42a3      	cmp	r3, r4
 8000a4e:	d1fb      	bne.n	8000a48 <_malloc_r+0xdc>
 8000a50:	2300      	movs	r3, #0
 8000a52:	6053      	str	r3, [r2, #4]
 8000a54:	e7de      	b.n	8000a14 <_malloc_r+0xa8>
 8000a56:	230c      	movs	r3, #12
 8000a58:	6033      	str	r3, [r6, #0]
 8000a5a:	4630      	mov	r0, r6
 8000a5c:	f000 f80c 	bl	8000a78 <__malloc_unlock>
 8000a60:	e794      	b.n	800098c <_malloc_r+0x20>
 8000a62:	6005      	str	r5, [r0, #0]
 8000a64:	e7d6      	b.n	8000a14 <_malloc_r+0xa8>
 8000a66:	bf00      	nop
 8000a68:	200001c4 	.word	0x200001c4

08000a6c <__malloc_lock>:
 8000a6c:	4801      	ldr	r0, [pc, #4]	@ (8000a74 <__malloc_lock+0x8>)
 8000a6e:	f7ff bf0e 	b.w	800088e <__retarget_lock_acquire_recursive>
 8000a72:	bf00      	nop
 8000a74:	200001bc 	.word	0x200001bc

08000a78 <__malloc_unlock>:
 8000a78:	4801      	ldr	r0, [pc, #4]	@ (8000a80 <__malloc_unlock+0x8>)
 8000a7a:	f7ff bf09 	b.w	8000890 <__retarget_lock_release_recursive>
 8000a7e:	bf00      	nop
 8000a80:	200001bc 	.word	0x200001bc

08000a84 <__sflush_r>:
 8000a84:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000a88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a8c:	0716      	lsls	r6, r2, #28
 8000a8e:	4605      	mov	r5, r0
 8000a90:	460c      	mov	r4, r1
 8000a92:	d454      	bmi.n	8000b3e <__sflush_r+0xba>
 8000a94:	684b      	ldr	r3, [r1, #4]
 8000a96:	2b00      	cmp	r3, #0
 8000a98:	dc02      	bgt.n	8000aa0 <__sflush_r+0x1c>
 8000a9a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000a9c:	2b00      	cmp	r3, #0
 8000a9e:	dd48      	ble.n	8000b32 <__sflush_r+0xae>
 8000aa0:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000aa2:	2e00      	cmp	r6, #0
 8000aa4:	d045      	beq.n	8000b32 <__sflush_r+0xae>
 8000aa6:	2300      	movs	r3, #0
 8000aa8:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000aac:	682f      	ldr	r7, [r5, #0]
 8000aae:	6a21      	ldr	r1, [r4, #32]
 8000ab0:	602b      	str	r3, [r5, #0]
 8000ab2:	d030      	beq.n	8000b16 <__sflush_r+0x92>
 8000ab4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000ab6:	89a3      	ldrh	r3, [r4, #12]
 8000ab8:	0759      	lsls	r1, r3, #29
 8000aba:	d505      	bpl.n	8000ac8 <__sflush_r+0x44>
 8000abc:	6863      	ldr	r3, [r4, #4]
 8000abe:	1ad2      	subs	r2, r2, r3
 8000ac0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000ac2:	b10b      	cbz	r3, 8000ac8 <__sflush_r+0x44>
 8000ac4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000ac6:	1ad2      	subs	r2, r2, r3
 8000ac8:	2300      	movs	r3, #0
 8000aca:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000acc:	6a21      	ldr	r1, [r4, #32]
 8000ace:	4628      	mov	r0, r5
 8000ad0:	47b0      	blx	r6
 8000ad2:	1c43      	adds	r3, r0, #1
 8000ad4:	89a3      	ldrh	r3, [r4, #12]
 8000ad6:	d106      	bne.n	8000ae6 <__sflush_r+0x62>
 8000ad8:	6829      	ldr	r1, [r5, #0]
 8000ada:	291d      	cmp	r1, #29
 8000adc:	d82b      	bhi.n	8000b36 <__sflush_r+0xb2>
 8000ade:	4a2a      	ldr	r2, [pc, #168]	@ (8000b88 <__sflush_r+0x104>)
 8000ae0:	410a      	asrs	r2, r1
 8000ae2:	07d6      	lsls	r6, r2, #31
 8000ae4:	d427      	bmi.n	8000b36 <__sflush_r+0xb2>
 8000ae6:	2200      	movs	r2, #0
 8000ae8:	6062      	str	r2, [r4, #4]
 8000aea:	04d9      	lsls	r1, r3, #19
 8000aec:	6922      	ldr	r2, [r4, #16]
 8000aee:	6022      	str	r2, [r4, #0]
 8000af0:	d504      	bpl.n	8000afc <__sflush_r+0x78>
 8000af2:	1c42      	adds	r2, r0, #1
 8000af4:	d101      	bne.n	8000afa <__sflush_r+0x76>
 8000af6:	682b      	ldr	r3, [r5, #0]
 8000af8:	b903      	cbnz	r3, 8000afc <__sflush_r+0x78>
 8000afa:	6560      	str	r0, [r4, #84]	@ 0x54
 8000afc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000afe:	602f      	str	r7, [r5, #0]
 8000b00:	b1b9      	cbz	r1, 8000b32 <__sflush_r+0xae>
 8000b02:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000b06:	4299      	cmp	r1, r3
 8000b08:	d002      	beq.n	8000b10 <__sflush_r+0x8c>
 8000b0a:	4628      	mov	r0, r5
 8000b0c:	f7ff fec2 	bl	8000894 <_free_r>
 8000b10:	2300      	movs	r3, #0
 8000b12:	6363      	str	r3, [r4, #52]	@ 0x34
 8000b14:	e00d      	b.n	8000b32 <__sflush_r+0xae>
 8000b16:	2301      	movs	r3, #1
 8000b18:	4628      	mov	r0, r5
 8000b1a:	47b0      	blx	r6
 8000b1c:	4602      	mov	r2, r0
 8000b1e:	1c50      	adds	r0, r2, #1
 8000b20:	d1c9      	bne.n	8000ab6 <__sflush_r+0x32>
 8000b22:	682b      	ldr	r3, [r5, #0]
 8000b24:	2b00      	cmp	r3, #0
 8000b26:	d0c6      	beq.n	8000ab6 <__sflush_r+0x32>
 8000b28:	2b1d      	cmp	r3, #29
 8000b2a:	d001      	beq.n	8000b30 <__sflush_r+0xac>
 8000b2c:	2b16      	cmp	r3, #22
 8000b2e:	d11e      	bne.n	8000b6e <__sflush_r+0xea>
 8000b30:	602f      	str	r7, [r5, #0]
 8000b32:	2000      	movs	r0, #0
 8000b34:	e022      	b.n	8000b7c <__sflush_r+0xf8>
 8000b36:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000b3a:	b21b      	sxth	r3, r3
 8000b3c:	e01b      	b.n	8000b76 <__sflush_r+0xf2>
 8000b3e:	690f      	ldr	r7, [r1, #16]
 8000b40:	2f00      	cmp	r7, #0
 8000b42:	d0f6      	beq.n	8000b32 <__sflush_r+0xae>
 8000b44:	0793      	lsls	r3, r2, #30
 8000b46:	680e      	ldr	r6, [r1, #0]
 8000b48:	bf08      	it	eq
 8000b4a:	694b      	ldreq	r3, [r1, #20]
 8000b4c:	600f      	str	r7, [r1, #0]
 8000b4e:	bf18      	it	ne
 8000b50:	2300      	movne	r3, #0
 8000b52:	eba6 0807 	sub.w	r8, r6, r7
 8000b56:	608b      	str	r3, [r1, #8]
 8000b58:	f1b8 0f00 	cmp.w	r8, #0
 8000b5c:	dde9      	ble.n	8000b32 <__sflush_r+0xae>
 8000b5e:	6a21      	ldr	r1, [r4, #32]
 8000b60:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8000b62:	4643      	mov	r3, r8
 8000b64:	463a      	mov	r2, r7
 8000b66:	4628      	mov	r0, r5
 8000b68:	47b0      	blx	r6
 8000b6a:	2800      	cmp	r0, #0
 8000b6c:	dc08      	bgt.n	8000b80 <__sflush_r+0xfc>
 8000b6e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b72:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000b76:	81a3      	strh	r3, [r4, #12]
 8000b78:	f04f 30ff 	mov.w	r0, #4294967295
 8000b7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000b80:	4407      	add	r7, r0
 8000b82:	eba8 0800 	sub.w	r8, r8, r0
 8000b86:	e7e7      	b.n	8000b58 <__sflush_r+0xd4>
 8000b88:	dfbffffe 	.word	0xdfbffffe

08000b8c <_fflush_r>:
 8000b8c:	b538      	push	{r3, r4, r5, lr}
 8000b8e:	690b      	ldr	r3, [r1, #16]
 8000b90:	4605      	mov	r5, r0
 8000b92:	460c      	mov	r4, r1
 8000b94:	b913      	cbnz	r3, 8000b9c <_fflush_r+0x10>
 8000b96:	2500      	movs	r5, #0
 8000b98:	4628      	mov	r0, r5
 8000b9a:	bd38      	pop	{r3, r4, r5, pc}
 8000b9c:	b118      	cbz	r0, 8000ba6 <_fflush_r+0x1a>
 8000b9e:	6a03      	ldr	r3, [r0, #32]
 8000ba0:	b90b      	cbnz	r3, 8000ba6 <_fflush_r+0x1a>
 8000ba2:	f7ff fc8f 	bl	80004c4 <__sinit>
 8000ba6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000baa:	2b00      	cmp	r3, #0
 8000bac:	d0f3      	beq.n	8000b96 <_fflush_r+0xa>
 8000bae:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8000bb0:	07d0      	lsls	r0, r2, #31
 8000bb2:	d404      	bmi.n	8000bbe <_fflush_r+0x32>
 8000bb4:	0599      	lsls	r1, r3, #22
 8000bb6:	d402      	bmi.n	8000bbe <_fflush_r+0x32>
 8000bb8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000bba:	f7ff fe68 	bl	800088e <__retarget_lock_acquire_recursive>
 8000bbe:	4628      	mov	r0, r5
 8000bc0:	4621      	mov	r1, r4
 8000bc2:	f7ff ff5f 	bl	8000a84 <__sflush_r>
 8000bc6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000bc8:	07da      	lsls	r2, r3, #31
 8000bca:	4605      	mov	r5, r0
 8000bcc:	d4e4      	bmi.n	8000b98 <_fflush_r+0xc>
 8000bce:	89a3      	ldrh	r3, [r4, #12]
 8000bd0:	059b      	lsls	r3, r3, #22
 8000bd2:	d4e1      	bmi.n	8000b98 <_fflush_r+0xc>
 8000bd4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000bd6:	f7ff fe5b 	bl	8000890 <__retarget_lock_release_recursive>
 8000bda:	e7dd      	b.n	8000b98 <_fflush_r+0xc>

08000bdc <__swhatbuf_r>:
 8000bdc:	b570      	push	{r4, r5, r6, lr}
 8000bde:	460c      	mov	r4, r1
 8000be0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000be4:	2900      	cmp	r1, #0
 8000be6:	b096      	sub	sp, #88	@ 0x58
 8000be8:	4615      	mov	r5, r2
 8000bea:	461e      	mov	r6, r3
 8000bec:	da0d      	bge.n	8000c0a <__swhatbuf_r+0x2e>
 8000bee:	89a3      	ldrh	r3, [r4, #12]
 8000bf0:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8000bf4:	f04f 0100 	mov.w	r1, #0
 8000bf8:	bf14      	ite	ne
 8000bfa:	2340      	movne	r3, #64	@ 0x40
 8000bfc:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8000c00:	2000      	movs	r0, #0
 8000c02:	6031      	str	r1, [r6, #0]
 8000c04:	602b      	str	r3, [r5, #0]
 8000c06:	b016      	add	sp, #88	@ 0x58
 8000c08:	bd70      	pop	{r4, r5, r6, pc}
 8000c0a:	466a      	mov	r2, sp
 8000c0c:	f000 f848 	bl	8000ca0 <_fstat_r>
 8000c10:	2800      	cmp	r0, #0
 8000c12:	dbec      	blt.n	8000bee <__swhatbuf_r+0x12>
 8000c14:	9901      	ldr	r1, [sp, #4]
 8000c16:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8000c1a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8000c1e:	4259      	negs	r1, r3
 8000c20:	4159      	adcs	r1, r3
 8000c22:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000c26:	e7eb      	b.n	8000c00 <__swhatbuf_r+0x24>

08000c28 <__smakebuf_r>:
 8000c28:	898b      	ldrh	r3, [r1, #12]
 8000c2a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000c2c:	079d      	lsls	r5, r3, #30
 8000c2e:	4606      	mov	r6, r0
 8000c30:	460c      	mov	r4, r1
 8000c32:	d507      	bpl.n	8000c44 <__smakebuf_r+0x1c>
 8000c34:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8000c38:	6023      	str	r3, [r4, #0]
 8000c3a:	6123      	str	r3, [r4, #16]
 8000c3c:	2301      	movs	r3, #1
 8000c3e:	6163      	str	r3, [r4, #20]
 8000c40:	b003      	add	sp, #12
 8000c42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c44:	ab01      	add	r3, sp, #4
 8000c46:	466a      	mov	r2, sp
 8000c48:	f7ff ffc8 	bl	8000bdc <__swhatbuf_r>
 8000c4c:	9f00      	ldr	r7, [sp, #0]
 8000c4e:	4605      	mov	r5, r0
 8000c50:	4639      	mov	r1, r7
 8000c52:	4630      	mov	r0, r6
 8000c54:	f7ff fe8a 	bl	800096c <_malloc_r>
 8000c58:	b948      	cbnz	r0, 8000c6e <__smakebuf_r+0x46>
 8000c5a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c5e:	059a      	lsls	r2, r3, #22
 8000c60:	d4ee      	bmi.n	8000c40 <__smakebuf_r+0x18>
 8000c62:	f023 0303 	bic.w	r3, r3, #3
 8000c66:	f043 0302 	orr.w	r3, r3, #2
 8000c6a:	81a3      	strh	r3, [r4, #12]
 8000c6c:	e7e2      	b.n	8000c34 <__smakebuf_r+0xc>
 8000c6e:	89a3      	ldrh	r3, [r4, #12]
 8000c70:	6020      	str	r0, [r4, #0]
 8000c72:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000c76:	81a3      	strh	r3, [r4, #12]
 8000c78:	9b01      	ldr	r3, [sp, #4]
 8000c7a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8000c7e:	b15b      	cbz	r3, 8000c98 <__smakebuf_r+0x70>
 8000c80:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c84:	4630      	mov	r0, r6
 8000c86:	f000 f81d 	bl	8000cc4 <_isatty_r>
 8000c8a:	b128      	cbz	r0, 8000c98 <__smakebuf_r+0x70>
 8000c8c:	89a3      	ldrh	r3, [r4, #12]
 8000c8e:	f023 0303 	bic.w	r3, r3, #3
 8000c92:	f043 0301 	orr.w	r3, r3, #1
 8000c96:	81a3      	strh	r3, [r4, #12]
 8000c98:	89a3      	ldrh	r3, [r4, #12]
 8000c9a:	431d      	orrs	r5, r3
 8000c9c:	81a5      	strh	r5, [r4, #12]
 8000c9e:	e7cf      	b.n	8000c40 <__smakebuf_r+0x18>

08000ca0 <_fstat_r>:
 8000ca0:	b538      	push	{r3, r4, r5, lr}
 8000ca2:	4d07      	ldr	r5, [pc, #28]	@ (8000cc0 <_fstat_r+0x20>)
 8000ca4:	2300      	movs	r3, #0
 8000ca6:	4604      	mov	r4, r0
 8000ca8:	4608      	mov	r0, r1
 8000caa:	4611      	mov	r1, r2
 8000cac:	602b      	str	r3, [r5, #0]
 8000cae:	f7ff faf4 	bl	800029a <_fstat>
 8000cb2:	1c43      	adds	r3, r0, #1
 8000cb4:	d102      	bne.n	8000cbc <_fstat_r+0x1c>
 8000cb6:	682b      	ldr	r3, [r5, #0]
 8000cb8:	b103      	cbz	r3, 8000cbc <_fstat_r+0x1c>
 8000cba:	6023      	str	r3, [r4, #0]
 8000cbc:	bd38      	pop	{r3, r4, r5, pc}
 8000cbe:	bf00      	nop
 8000cc0:	200001b8 	.word	0x200001b8

08000cc4 <_isatty_r>:
 8000cc4:	b538      	push	{r3, r4, r5, lr}
 8000cc6:	4d06      	ldr	r5, [pc, #24]	@ (8000ce0 <_isatty_r+0x1c>)
 8000cc8:	2300      	movs	r3, #0
 8000cca:	4604      	mov	r4, r0
 8000ccc:	4608      	mov	r0, r1
 8000cce:	602b      	str	r3, [r5, #0]
 8000cd0:	f7ff faf3 	bl	80002ba <_isatty>
 8000cd4:	1c43      	adds	r3, r0, #1
 8000cd6:	d102      	bne.n	8000cde <_isatty_r+0x1a>
 8000cd8:	682b      	ldr	r3, [r5, #0]
 8000cda:	b103      	cbz	r3, 8000cde <_isatty_r+0x1a>
 8000cdc:	6023      	str	r3, [r4, #0]
 8000cde:	bd38      	pop	{r3, r4, r5, pc}
 8000ce0:	200001b8 	.word	0x200001b8

08000ce4 <_sbrk_r>:
 8000ce4:	b538      	push	{r3, r4, r5, lr}
 8000ce6:	4d06      	ldr	r5, [pc, #24]	@ (8000d00 <_sbrk_r+0x1c>)
 8000ce8:	2300      	movs	r3, #0
 8000cea:	4604      	mov	r4, r0
 8000cec:	4608      	mov	r0, r1
 8000cee:	602b      	str	r3, [r5, #0]
 8000cf0:	f7ff fafc 	bl	80002ec <_sbrk>
 8000cf4:	1c43      	adds	r3, r0, #1
 8000cf6:	d102      	bne.n	8000cfe <_sbrk_r+0x1a>
 8000cf8:	682b      	ldr	r3, [r5, #0]
 8000cfa:	b103      	cbz	r3, 8000cfe <_sbrk_r+0x1a>
 8000cfc:	6023      	str	r3, [r4, #0]
 8000cfe:	bd38      	pop	{r3, r4, r5, pc}
 8000d00:	200001b8 	.word	0x200001b8

08000d04 <_init>:
 8000d04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d06:	bf00      	nop
 8000d08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d0a:	bc08      	pop	{r3}
 8000d0c:	469e      	mov	lr, r3
 8000d0e:	4770      	bx	lr

08000d10 <_fini>:
 8000d10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d12:	bf00      	nop
 8000d14:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d16:	bc08      	pop	{r3}
 8000d18:	469e      	mov	lr, r3
 8000d1a:	4770      	bx	lr
