
007_stack_MSP_and_PSP.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001258  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000054  080013e8  080013e8  000023e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800143c  0800143c  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  0800143c  0800143c  0000243c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001444  08001444  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001444  08001444  00002444  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001448  08001448  00002448  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  0800144c  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000305c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0000305c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0000305c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000099b  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000003ab  00000000  00000000  00003a27  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000130  00000000  00000000  00003dd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000d0  00000000  00000000  00003f08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002ce8  00000000  00000000  00003fd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001482  00000000  00000000  00006cc0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009856  00000000  00000000  00008142  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00011998  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000b94  00000000  00000000  000119dc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000079  00000000  00000000  00012570  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000005c 	.word	0x2000005c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080013d0 	.word	0x080013d0

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000060 	.word	0x20000060
 80001cc:	080013d0 	.word	0x080013d0

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <change_sp_2_psp>:
#define STACK_PSP_START		(STACK_MSP_END)

__attribute__((naked)) void change_sp_2_psp(void){
	__asm volatile(".equ SRAM_END, (0X20000000 + (128 * 1024))");
	__asm volatile(".equ PSP_START, (SRAM_END - 512)");
	__asm volatile("LDR R0, =PSP_START");
 8000270:	4804      	ldr	r0, [pc, #16]	@ (8000284 <change_sp_2_psp+0x14>)
	__asm volatile("MSR PSP, R0");
 8000272:	f380 8809 	msr	PSP, r0
	__asm volatile("MOV R0, #0x00000002");
 8000276:	f04f 0002 	mov.w	r0, #2
	__asm volatile("MSR CONTROL, R0");
 800027a:	f380 8814 	msr	CONTROL, r0
	__asm volatile("BX LR");
 800027e:	4770      	bx	lr

}
 8000280:	bf00      	nop
 8000282:	0000      	.short	0x0000
 8000284:	2001fe00 	.word	0x2001fe00

08000288 <generate_exception>:

void generate_exception(){
 8000288:	b480      	push	{r7}
 800028a:	af00      	add	r7, sp, #0
	__asm volatile("SVC #0X2");
 800028c:	df02      	svc	2
}
 800028e:	bf00      	nop
 8000290:	46bd      	mov	sp, r7
 8000292:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000296:	4770      	bx	lr

08000298 <func_add>:

uint8_t func_add(uint8_t a, uint8_t b, uint8_t c, uint8_t d){
 8000298:	b490      	push	{r4, r7}
 800029a:	b082      	sub	sp, #8
 800029c:	af00      	add	r7, sp, #0
 800029e:	4604      	mov	r4, r0
 80002a0:	4608      	mov	r0, r1
 80002a2:	4611      	mov	r1, r2
 80002a4:	461a      	mov	r2, r3
 80002a6:	4623      	mov	r3, r4
 80002a8:	71fb      	strb	r3, [r7, #7]
 80002aa:	4603      	mov	r3, r0
 80002ac:	71bb      	strb	r3, [r7, #6]
 80002ae:	460b      	mov	r3, r1
 80002b0:	717b      	strb	r3, [r7, #5]
 80002b2:	4613      	mov	r3, r2
 80002b4:	713b      	strb	r3, [r7, #4]
	return a + b + c + d;
 80002b6:	79fa      	ldrb	r2, [r7, #7]
 80002b8:	79bb      	ldrb	r3, [r7, #6]
 80002ba:	4413      	add	r3, r2
 80002bc:	b2da      	uxtb	r2, r3
 80002be:	797b      	ldrb	r3, [r7, #5]
 80002c0:	4413      	add	r3, r2
 80002c2:	b2da      	uxtb	r2, r3
 80002c4:	793b      	ldrb	r3, [r7, #4]
 80002c6:	4413      	add	r3, r2
 80002c8:	b2db      	uxtb	r3, r3
}
 80002ca:	4618      	mov	r0, r3
 80002cc:	3708      	adds	r7, #8
 80002ce:	46bd      	mov	sp, r7
 80002d0:	bc90      	pop	{r4, r7}
 80002d2:	4770      	bx	lr

080002d4 <main>:

int main(void)
{
 80002d4:	b580      	push	{r7, lr}
 80002d6:	b082      	sub	sp, #8
 80002d8:	af00      	add	r7, sp, #0

	change_sp_2_psp();
 80002da:	f7ff ffc9 	bl	8000270 <change_sp_2_psp>

	uint8_t result;
	result = func_add(1,2,3,4);
 80002de:	2304      	movs	r3, #4
 80002e0:	2203      	movs	r2, #3
 80002e2:	2102      	movs	r1, #2
 80002e4:	2001      	movs	r0, #1
 80002e6:	f7ff ffd7 	bl	8000298 <func_add>
 80002ea:	4603      	mov	r3, r0
 80002ec:	71fb      	strb	r3, [r7, #7]

	printf("Result = %hhu", result);
 80002ee:	79fb      	ldrb	r3, [r7, #7]
 80002f0:	4619      	mov	r1, r3
 80002f2:	4803      	ldr	r0, [pc, #12]	@ (8000300 <main+0x2c>)
 80002f4:	f000 f9a0 	bl	8000638 <iprintf>

	generate_exception();
 80002f8:	f7ff ffc6 	bl	8000288 <generate_exception>
    /* Loop forever */
	for(;;);
 80002fc:	bf00      	nop
 80002fe:	e7fd      	b.n	80002fc <main+0x28>
 8000300:	080013e8 	.word	0x080013e8

08000304 <SVC_Handler>:
}

void SVC_Handler(void){
 8000304:	b580      	push	{r7, lr}
 8000306:	af00      	add	r7, sp, #0
	printf("in SVC_Handler\n");
 8000308:	4802      	ldr	r0, [pc, #8]	@ (8000314 <SVC_Handler+0x10>)
 800030a:	f000 f9fd 	bl	8000708 <puts>
}
 800030e:	bf00      	nop
 8000310:	bd80      	pop	{r7, pc}
 8000312:	bf00      	nop
 8000314:	080013f8 	.word	0x080013f8

08000318 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000318:	b580      	push	{r7, lr}
 800031a:	b086      	sub	sp, #24
 800031c:	af00      	add	r7, sp, #0
 800031e:	60f8      	str	r0, [r7, #12]
 8000320:	60b9      	str	r1, [r7, #8]
 8000322:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000324:	2300      	movs	r3, #0
 8000326:	617b      	str	r3, [r7, #20]
 8000328:	e00a      	b.n	8000340 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800032a:	f3af 8000 	nop.w
 800032e:	4601      	mov	r1, r0
 8000330:	68bb      	ldr	r3, [r7, #8]
 8000332:	1c5a      	adds	r2, r3, #1
 8000334:	60ba      	str	r2, [r7, #8]
 8000336:	b2ca      	uxtb	r2, r1
 8000338:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800033a:	697b      	ldr	r3, [r7, #20]
 800033c:	3301      	adds	r3, #1
 800033e:	617b      	str	r3, [r7, #20]
 8000340:	697a      	ldr	r2, [r7, #20]
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	429a      	cmp	r2, r3
 8000346:	dbf0      	blt.n	800032a <_read+0x12>
  }

  return len;
 8000348:	687b      	ldr	r3, [r7, #4]
}
 800034a:	4618      	mov	r0, r3
 800034c:	3718      	adds	r7, #24
 800034e:	46bd      	mov	sp, r7
 8000350:	bd80      	pop	{r7, pc}

08000352 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000352:	b580      	push	{r7, lr}
 8000354:	b086      	sub	sp, #24
 8000356:	af00      	add	r7, sp, #0
 8000358:	60f8      	str	r0, [r7, #12]
 800035a:	60b9      	str	r1, [r7, #8]
 800035c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800035e:	2300      	movs	r3, #0
 8000360:	617b      	str	r3, [r7, #20]
 8000362:	e009      	b.n	8000378 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000364:	68bb      	ldr	r3, [r7, #8]
 8000366:	1c5a      	adds	r2, r3, #1
 8000368:	60ba      	str	r2, [r7, #8]
 800036a:	781b      	ldrb	r3, [r3, #0]
 800036c:	4618      	mov	r0, r3
 800036e:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000372:	697b      	ldr	r3, [r7, #20]
 8000374:	3301      	adds	r3, #1
 8000376:	617b      	str	r3, [r7, #20]
 8000378:	697a      	ldr	r2, [r7, #20]
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	429a      	cmp	r2, r3
 800037e:	dbf1      	blt.n	8000364 <_write+0x12>
  }
  return len;
 8000380:	687b      	ldr	r3, [r7, #4]
}
 8000382:	4618      	mov	r0, r3
 8000384:	3718      	adds	r7, #24
 8000386:	46bd      	mov	sp, r7
 8000388:	bd80      	pop	{r7, pc}

0800038a <_close>:

int _close(int file)
{
 800038a:	b480      	push	{r7}
 800038c:	b083      	sub	sp, #12
 800038e:	af00      	add	r7, sp, #0
 8000390:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000392:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000396:	4618      	mov	r0, r3
 8000398:	370c      	adds	r7, #12
 800039a:	46bd      	mov	sp, r7
 800039c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003a0:	4770      	bx	lr

080003a2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003a2:	b480      	push	{r7}
 80003a4:	b083      	sub	sp, #12
 80003a6:	af00      	add	r7, sp, #0
 80003a8:	6078      	str	r0, [r7, #4]
 80003aa:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003ac:	683b      	ldr	r3, [r7, #0]
 80003ae:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80003b2:	605a      	str	r2, [r3, #4]
  return 0;
 80003b4:	2300      	movs	r3, #0
}
 80003b6:	4618      	mov	r0, r3
 80003b8:	370c      	adds	r7, #12
 80003ba:	46bd      	mov	sp, r7
 80003bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003c0:	4770      	bx	lr

080003c2 <_isatty>:

int _isatty(int file)
{
 80003c2:	b480      	push	{r7}
 80003c4:	b083      	sub	sp, #12
 80003c6:	af00      	add	r7, sp, #0
 80003c8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003ca:	2301      	movs	r3, #1
}
 80003cc:	4618      	mov	r0, r3
 80003ce:	370c      	adds	r7, #12
 80003d0:	46bd      	mov	sp, r7
 80003d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003d6:	4770      	bx	lr

080003d8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003d8:	b480      	push	{r7}
 80003da:	b085      	sub	sp, #20
 80003dc:	af00      	add	r7, sp, #0
 80003de:	60f8      	str	r0, [r7, #12]
 80003e0:	60b9      	str	r1, [r7, #8]
 80003e2:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003e4:	2300      	movs	r3, #0
}
 80003e6:	4618      	mov	r0, r3
 80003e8:	3714      	adds	r7, #20
 80003ea:	46bd      	mov	sp, r7
 80003ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003f0:	4770      	bx	lr
	...

080003f4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003f4:	b580      	push	{r7, lr}
 80003f6:	b086      	sub	sp, #24
 80003f8:	af00      	add	r7, sp, #0
 80003fa:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003fc:	4a14      	ldr	r2, [pc, #80]	@ (8000450 <_sbrk+0x5c>)
 80003fe:	4b15      	ldr	r3, [pc, #84]	@ (8000454 <_sbrk+0x60>)
 8000400:	1ad3      	subs	r3, r2, r3
 8000402:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000404:	697b      	ldr	r3, [r7, #20]
 8000406:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000408:	4b13      	ldr	r3, [pc, #76]	@ (8000458 <_sbrk+0x64>)
 800040a:	681b      	ldr	r3, [r3, #0]
 800040c:	2b00      	cmp	r3, #0
 800040e:	d102      	bne.n	8000416 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000410:	4b11      	ldr	r3, [pc, #68]	@ (8000458 <_sbrk+0x64>)
 8000412:	4a12      	ldr	r2, [pc, #72]	@ (800045c <_sbrk+0x68>)
 8000414:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000416:	4b10      	ldr	r3, [pc, #64]	@ (8000458 <_sbrk+0x64>)
 8000418:	681a      	ldr	r2, [r3, #0]
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	4413      	add	r3, r2
 800041e:	693a      	ldr	r2, [r7, #16]
 8000420:	429a      	cmp	r2, r3
 8000422:	d207      	bcs.n	8000434 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000424:	f000 fa9e 	bl	8000964 <__errno>
 8000428:	4603      	mov	r3, r0
 800042a:	220c      	movs	r2, #12
 800042c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800042e:	f04f 33ff 	mov.w	r3, #4294967295
 8000432:	e009      	b.n	8000448 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000434:	4b08      	ldr	r3, [pc, #32]	@ (8000458 <_sbrk+0x64>)
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800043a:	4b07      	ldr	r3, [pc, #28]	@ (8000458 <_sbrk+0x64>)
 800043c:	681a      	ldr	r2, [r3, #0]
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	4413      	add	r3, r2
 8000442:	4a05      	ldr	r2, [pc, #20]	@ (8000458 <_sbrk+0x64>)
 8000444:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000446:	68fb      	ldr	r3, [r7, #12]
}
 8000448:	4618      	mov	r0, r3
 800044a:	3718      	adds	r7, #24
 800044c:	46bd      	mov	sp, r7
 800044e:	bd80      	pop	{r7, pc}
 8000450:	20020000 	.word	0x20020000
 8000454:	00000400 	.word	0x00000400
 8000458:	20000078 	.word	0x20000078
 800045c:	200001c8 	.word	0x200001c8

08000460 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000460:	480d      	ldr	r0, [pc, #52]	@ (8000498 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000462:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000464:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000468:	480c      	ldr	r0, [pc, #48]	@ (800049c <LoopForever+0x6>)
  ldr r1, =_edata
 800046a:	490d      	ldr	r1, [pc, #52]	@ (80004a0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800046c:	4a0d      	ldr	r2, [pc, #52]	@ (80004a4 <LoopForever+0xe>)
  movs r3, #0
 800046e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000470:	e002      	b.n	8000478 <LoopCopyDataInit>

08000472 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000472:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000474:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000476:	3304      	adds	r3, #4

08000478 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000478:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800047a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800047c:	d3f9      	bcc.n	8000472 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800047e:	4a0a      	ldr	r2, [pc, #40]	@ (80004a8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000480:	4c0a      	ldr	r4, [pc, #40]	@ (80004ac <LoopForever+0x16>)
  movs r3, #0
 8000482:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000484:	e001      	b.n	800048a <LoopFillZerobss>

08000486 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000486:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000488:	3204      	adds	r2, #4

0800048a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800048a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800048c:	d3fb      	bcc.n	8000486 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800048e:	f000 fa6f 	bl	8000970 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000492:	f7ff ff1f 	bl	80002d4 <main>

08000496 <LoopForever>:

LoopForever:
  b LoopForever
 8000496:	e7fe      	b.n	8000496 <LoopForever>
  ldr   r0, =_estack
 8000498:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800049c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004a0:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80004a4:	0800144c 	.word	0x0800144c
  ldr r2, =_sbss
 80004a8:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80004ac:	200001c8 	.word	0x200001c8

080004b0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004b0:	e7fe      	b.n	80004b0 <ADC_IRQHandler>
	...

080004b4 <std>:
 80004b4:	2300      	movs	r3, #0
 80004b6:	b510      	push	{r4, lr}
 80004b8:	4604      	mov	r4, r0
 80004ba:	e9c0 3300 	strd	r3, r3, [r0]
 80004be:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80004c2:	6083      	str	r3, [r0, #8]
 80004c4:	8181      	strh	r1, [r0, #12]
 80004c6:	6643      	str	r3, [r0, #100]	@ 0x64
 80004c8:	81c2      	strh	r2, [r0, #14]
 80004ca:	6183      	str	r3, [r0, #24]
 80004cc:	4619      	mov	r1, r3
 80004ce:	2208      	movs	r2, #8
 80004d0:	305c      	adds	r0, #92	@ 0x5c
 80004d2:	f000 f9f9 	bl	80008c8 <memset>
 80004d6:	4b0d      	ldr	r3, [pc, #52]	@ (800050c <std+0x58>)
 80004d8:	6263      	str	r3, [r4, #36]	@ 0x24
 80004da:	4b0d      	ldr	r3, [pc, #52]	@ (8000510 <std+0x5c>)
 80004dc:	62a3      	str	r3, [r4, #40]	@ 0x28
 80004de:	4b0d      	ldr	r3, [pc, #52]	@ (8000514 <std+0x60>)
 80004e0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80004e2:	4b0d      	ldr	r3, [pc, #52]	@ (8000518 <std+0x64>)
 80004e4:	6323      	str	r3, [r4, #48]	@ 0x30
 80004e6:	4b0d      	ldr	r3, [pc, #52]	@ (800051c <std+0x68>)
 80004e8:	6224      	str	r4, [r4, #32]
 80004ea:	429c      	cmp	r4, r3
 80004ec:	d006      	beq.n	80004fc <std+0x48>
 80004ee:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80004f2:	4294      	cmp	r4, r2
 80004f4:	d002      	beq.n	80004fc <std+0x48>
 80004f6:	33d0      	adds	r3, #208	@ 0xd0
 80004f8:	429c      	cmp	r4, r3
 80004fa:	d105      	bne.n	8000508 <std+0x54>
 80004fc:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000500:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000504:	f000 ba58 	b.w	80009b8 <__retarget_lock_init_recursive>
 8000508:	bd10      	pop	{r4, pc}
 800050a:	bf00      	nop
 800050c:	08000719 	.word	0x08000719
 8000510:	0800073b 	.word	0x0800073b
 8000514:	08000773 	.word	0x08000773
 8000518:	08000797 	.word	0x08000797
 800051c:	2000007c 	.word	0x2000007c

08000520 <stdio_exit_handler>:
 8000520:	4a02      	ldr	r2, [pc, #8]	@ (800052c <stdio_exit_handler+0xc>)
 8000522:	4903      	ldr	r1, [pc, #12]	@ (8000530 <stdio_exit_handler+0x10>)
 8000524:	4803      	ldr	r0, [pc, #12]	@ (8000534 <stdio_exit_handler+0x14>)
 8000526:	f000 b869 	b.w	80005fc <_fwalk_sglue>
 800052a:	bf00      	nop
 800052c:	20000000 	.word	0x20000000
 8000530:	08001259 	.word	0x08001259
 8000534:	20000010 	.word	0x20000010

08000538 <cleanup_stdio>:
 8000538:	6841      	ldr	r1, [r0, #4]
 800053a:	4b0c      	ldr	r3, [pc, #48]	@ (800056c <cleanup_stdio+0x34>)
 800053c:	4299      	cmp	r1, r3
 800053e:	b510      	push	{r4, lr}
 8000540:	4604      	mov	r4, r0
 8000542:	d001      	beq.n	8000548 <cleanup_stdio+0x10>
 8000544:	f000 fe88 	bl	8001258 <_fflush_r>
 8000548:	68a1      	ldr	r1, [r4, #8]
 800054a:	4b09      	ldr	r3, [pc, #36]	@ (8000570 <cleanup_stdio+0x38>)
 800054c:	4299      	cmp	r1, r3
 800054e:	d002      	beq.n	8000556 <cleanup_stdio+0x1e>
 8000550:	4620      	mov	r0, r4
 8000552:	f000 fe81 	bl	8001258 <_fflush_r>
 8000556:	68e1      	ldr	r1, [r4, #12]
 8000558:	4b06      	ldr	r3, [pc, #24]	@ (8000574 <cleanup_stdio+0x3c>)
 800055a:	4299      	cmp	r1, r3
 800055c:	d004      	beq.n	8000568 <cleanup_stdio+0x30>
 800055e:	4620      	mov	r0, r4
 8000560:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000564:	f000 be78 	b.w	8001258 <_fflush_r>
 8000568:	bd10      	pop	{r4, pc}
 800056a:	bf00      	nop
 800056c:	2000007c 	.word	0x2000007c
 8000570:	200000e4 	.word	0x200000e4
 8000574:	2000014c 	.word	0x2000014c

08000578 <global_stdio_init.part.0>:
 8000578:	b510      	push	{r4, lr}
 800057a:	4b0b      	ldr	r3, [pc, #44]	@ (80005a8 <global_stdio_init.part.0+0x30>)
 800057c:	4c0b      	ldr	r4, [pc, #44]	@ (80005ac <global_stdio_init.part.0+0x34>)
 800057e:	4a0c      	ldr	r2, [pc, #48]	@ (80005b0 <global_stdio_init.part.0+0x38>)
 8000580:	601a      	str	r2, [r3, #0]
 8000582:	4620      	mov	r0, r4
 8000584:	2200      	movs	r2, #0
 8000586:	2104      	movs	r1, #4
 8000588:	f7ff ff94 	bl	80004b4 <std>
 800058c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000590:	2201      	movs	r2, #1
 8000592:	2109      	movs	r1, #9
 8000594:	f7ff ff8e 	bl	80004b4 <std>
 8000598:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800059c:	2202      	movs	r2, #2
 800059e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005a2:	2112      	movs	r1, #18
 80005a4:	f7ff bf86 	b.w	80004b4 <std>
 80005a8:	200001b4 	.word	0x200001b4
 80005ac:	2000007c 	.word	0x2000007c
 80005b0:	08000521 	.word	0x08000521

080005b4 <__sfp_lock_acquire>:
 80005b4:	4801      	ldr	r0, [pc, #4]	@ (80005bc <__sfp_lock_acquire+0x8>)
 80005b6:	f000 ba00 	b.w	80009ba <__retarget_lock_acquire_recursive>
 80005ba:	bf00      	nop
 80005bc:	200001bd 	.word	0x200001bd

080005c0 <__sfp_lock_release>:
 80005c0:	4801      	ldr	r0, [pc, #4]	@ (80005c8 <__sfp_lock_release+0x8>)
 80005c2:	f000 b9fb 	b.w	80009bc <__retarget_lock_release_recursive>
 80005c6:	bf00      	nop
 80005c8:	200001bd 	.word	0x200001bd

080005cc <__sinit>:
 80005cc:	b510      	push	{r4, lr}
 80005ce:	4604      	mov	r4, r0
 80005d0:	f7ff fff0 	bl	80005b4 <__sfp_lock_acquire>
 80005d4:	6a23      	ldr	r3, [r4, #32]
 80005d6:	b11b      	cbz	r3, 80005e0 <__sinit+0x14>
 80005d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005dc:	f7ff bff0 	b.w	80005c0 <__sfp_lock_release>
 80005e0:	4b04      	ldr	r3, [pc, #16]	@ (80005f4 <__sinit+0x28>)
 80005e2:	6223      	str	r3, [r4, #32]
 80005e4:	4b04      	ldr	r3, [pc, #16]	@ (80005f8 <__sinit+0x2c>)
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	2b00      	cmp	r3, #0
 80005ea:	d1f5      	bne.n	80005d8 <__sinit+0xc>
 80005ec:	f7ff ffc4 	bl	8000578 <global_stdio_init.part.0>
 80005f0:	e7f2      	b.n	80005d8 <__sinit+0xc>
 80005f2:	bf00      	nop
 80005f4:	08000539 	.word	0x08000539
 80005f8:	200001b4 	.word	0x200001b4

080005fc <_fwalk_sglue>:
 80005fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000600:	4607      	mov	r7, r0
 8000602:	4688      	mov	r8, r1
 8000604:	4614      	mov	r4, r2
 8000606:	2600      	movs	r6, #0
 8000608:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800060c:	f1b9 0901 	subs.w	r9, r9, #1
 8000610:	d505      	bpl.n	800061e <_fwalk_sglue+0x22>
 8000612:	6824      	ldr	r4, [r4, #0]
 8000614:	2c00      	cmp	r4, #0
 8000616:	d1f7      	bne.n	8000608 <_fwalk_sglue+0xc>
 8000618:	4630      	mov	r0, r6
 800061a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800061e:	89ab      	ldrh	r3, [r5, #12]
 8000620:	2b01      	cmp	r3, #1
 8000622:	d907      	bls.n	8000634 <_fwalk_sglue+0x38>
 8000624:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000628:	3301      	adds	r3, #1
 800062a:	d003      	beq.n	8000634 <_fwalk_sglue+0x38>
 800062c:	4629      	mov	r1, r5
 800062e:	4638      	mov	r0, r7
 8000630:	47c0      	blx	r8
 8000632:	4306      	orrs	r6, r0
 8000634:	3568      	adds	r5, #104	@ 0x68
 8000636:	e7e9      	b.n	800060c <_fwalk_sglue+0x10>

08000638 <iprintf>:
 8000638:	b40f      	push	{r0, r1, r2, r3}
 800063a:	b507      	push	{r0, r1, r2, lr}
 800063c:	4906      	ldr	r1, [pc, #24]	@ (8000658 <iprintf+0x20>)
 800063e:	ab04      	add	r3, sp, #16
 8000640:	6808      	ldr	r0, [r1, #0]
 8000642:	f853 2b04 	ldr.w	r2, [r3], #4
 8000646:	6881      	ldr	r1, [r0, #8]
 8000648:	9301      	str	r3, [sp, #4]
 800064a:	f000 fadb 	bl	8000c04 <_vfiprintf_r>
 800064e:	b003      	add	sp, #12
 8000650:	f85d eb04 	ldr.w	lr, [sp], #4
 8000654:	b004      	add	sp, #16
 8000656:	4770      	bx	lr
 8000658:	2000000c 	.word	0x2000000c

0800065c <_puts_r>:
 800065c:	6a03      	ldr	r3, [r0, #32]
 800065e:	b570      	push	{r4, r5, r6, lr}
 8000660:	6884      	ldr	r4, [r0, #8]
 8000662:	4605      	mov	r5, r0
 8000664:	460e      	mov	r6, r1
 8000666:	b90b      	cbnz	r3, 800066c <_puts_r+0x10>
 8000668:	f7ff ffb0 	bl	80005cc <__sinit>
 800066c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800066e:	07db      	lsls	r3, r3, #31
 8000670:	d405      	bmi.n	800067e <_puts_r+0x22>
 8000672:	89a3      	ldrh	r3, [r4, #12]
 8000674:	0598      	lsls	r0, r3, #22
 8000676:	d402      	bmi.n	800067e <_puts_r+0x22>
 8000678:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800067a:	f000 f99e 	bl	80009ba <__retarget_lock_acquire_recursive>
 800067e:	89a3      	ldrh	r3, [r4, #12]
 8000680:	0719      	lsls	r1, r3, #28
 8000682:	d502      	bpl.n	800068a <_puts_r+0x2e>
 8000684:	6923      	ldr	r3, [r4, #16]
 8000686:	2b00      	cmp	r3, #0
 8000688:	d135      	bne.n	80006f6 <_puts_r+0x9a>
 800068a:	4621      	mov	r1, r4
 800068c:	4628      	mov	r0, r5
 800068e:	f000 f8c5 	bl	800081c <__swsetup_r>
 8000692:	b380      	cbz	r0, 80006f6 <_puts_r+0x9a>
 8000694:	f04f 35ff 	mov.w	r5, #4294967295
 8000698:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800069a:	07da      	lsls	r2, r3, #31
 800069c:	d405      	bmi.n	80006aa <_puts_r+0x4e>
 800069e:	89a3      	ldrh	r3, [r4, #12]
 80006a0:	059b      	lsls	r3, r3, #22
 80006a2:	d402      	bmi.n	80006aa <_puts_r+0x4e>
 80006a4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80006a6:	f000 f989 	bl	80009bc <__retarget_lock_release_recursive>
 80006aa:	4628      	mov	r0, r5
 80006ac:	bd70      	pop	{r4, r5, r6, pc}
 80006ae:	2b00      	cmp	r3, #0
 80006b0:	da04      	bge.n	80006bc <_puts_r+0x60>
 80006b2:	69a2      	ldr	r2, [r4, #24]
 80006b4:	429a      	cmp	r2, r3
 80006b6:	dc17      	bgt.n	80006e8 <_puts_r+0x8c>
 80006b8:	290a      	cmp	r1, #10
 80006ba:	d015      	beq.n	80006e8 <_puts_r+0x8c>
 80006bc:	6823      	ldr	r3, [r4, #0]
 80006be:	1c5a      	adds	r2, r3, #1
 80006c0:	6022      	str	r2, [r4, #0]
 80006c2:	7019      	strb	r1, [r3, #0]
 80006c4:	68a3      	ldr	r3, [r4, #8]
 80006c6:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80006ca:	3b01      	subs	r3, #1
 80006cc:	60a3      	str	r3, [r4, #8]
 80006ce:	2900      	cmp	r1, #0
 80006d0:	d1ed      	bne.n	80006ae <_puts_r+0x52>
 80006d2:	2b00      	cmp	r3, #0
 80006d4:	da11      	bge.n	80006fa <_puts_r+0x9e>
 80006d6:	4622      	mov	r2, r4
 80006d8:	210a      	movs	r1, #10
 80006da:	4628      	mov	r0, r5
 80006dc:	f000 f85f 	bl	800079e <__swbuf_r>
 80006e0:	3001      	adds	r0, #1
 80006e2:	d0d7      	beq.n	8000694 <_puts_r+0x38>
 80006e4:	250a      	movs	r5, #10
 80006e6:	e7d7      	b.n	8000698 <_puts_r+0x3c>
 80006e8:	4622      	mov	r2, r4
 80006ea:	4628      	mov	r0, r5
 80006ec:	f000 f857 	bl	800079e <__swbuf_r>
 80006f0:	3001      	adds	r0, #1
 80006f2:	d1e7      	bne.n	80006c4 <_puts_r+0x68>
 80006f4:	e7ce      	b.n	8000694 <_puts_r+0x38>
 80006f6:	3e01      	subs	r6, #1
 80006f8:	e7e4      	b.n	80006c4 <_puts_r+0x68>
 80006fa:	6823      	ldr	r3, [r4, #0]
 80006fc:	1c5a      	adds	r2, r3, #1
 80006fe:	6022      	str	r2, [r4, #0]
 8000700:	220a      	movs	r2, #10
 8000702:	701a      	strb	r2, [r3, #0]
 8000704:	e7ee      	b.n	80006e4 <_puts_r+0x88>
	...

08000708 <puts>:
 8000708:	4b02      	ldr	r3, [pc, #8]	@ (8000714 <puts+0xc>)
 800070a:	4601      	mov	r1, r0
 800070c:	6818      	ldr	r0, [r3, #0]
 800070e:	f7ff bfa5 	b.w	800065c <_puts_r>
 8000712:	bf00      	nop
 8000714:	2000000c 	.word	0x2000000c

08000718 <__sread>:
 8000718:	b510      	push	{r4, lr}
 800071a:	460c      	mov	r4, r1
 800071c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000720:	f000 f8fc 	bl	800091c <_read_r>
 8000724:	2800      	cmp	r0, #0
 8000726:	bfab      	itete	ge
 8000728:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800072a:	89a3      	ldrhlt	r3, [r4, #12]
 800072c:	181b      	addge	r3, r3, r0
 800072e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000732:	bfac      	ite	ge
 8000734:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000736:	81a3      	strhlt	r3, [r4, #12]
 8000738:	bd10      	pop	{r4, pc}

0800073a <__swrite>:
 800073a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800073e:	461f      	mov	r7, r3
 8000740:	898b      	ldrh	r3, [r1, #12]
 8000742:	05db      	lsls	r3, r3, #23
 8000744:	4605      	mov	r5, r0
 8000746:	460c      	mov	r4, r1
 8000748:	4616      	mov	r6, r2
 800074a:	d505      	bpl.n	8000758 <__swrite+0x1e>
 800074c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000750:	2302      	movs	r3, #2
 8000752:	2200      	movs	r2, #0
 8000754:	f000 f8d0 	bl	80008f8 <_lseek_r>
 8000758:	89a3      	ldrh	r3, [r4, #12]
 800075a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800075e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000762:	81a3      	strh	r3, [r4, #12]
 8000764:	4632      	mov	r2, r6
 8000766:	463b      	mov	r3, r7
 8000768:	4628      	mov	r0, r5
 800076a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800076e:	f000 b8e7 	b.w	8000940 <_write_r>

08000772 <__sseek>:
 8000772:	b510      	push	{r4, lr}
 8000774:	460c      	mov	r4, r1
 8000776:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800077a:	f000 f8bd 	bl	80008f8 <_lseek_r>
 800077e:	1c43      	adds	r3, r0, #1
 8000780:	89a3      	ldrh	r3, [r4, #12]
 8000782:	bf15      	itete	ne
 8000784:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000786:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800078a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800078e:	81a3      	strheq	r3, [r4, #12]
 8000790:	bf18      	it	ne
 8000792:	81a3      	strhne	r3, [r4, #12]
 8000794:	bd10      	pop	{r4, pc}

08000796 <__sclose>:
 8000796:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800079a:	f000 b89d 	b.w	80008d8 <_close_r>

0800079e <__swbuf_r>:
 800079e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007a0:	460e      	mov	r6, r1
 80007a2:	4614      	mov	r4, r2
 80007a4:	4605      	mov	r5, r0
 80007a6:	b118      	cbz	r0, 80007b0 <__swbuf_r+0x12>
 80007a8:	6a03      	ldr	r3, [r0, #32]
 80007aa:	b90b      	cbnz	r3, 80007b0 <__swbuf_r+0x12>
 80007ac:	f7ff ff0e 	bl	80005cc <__sinit>
 80007b0:	69a3      	ldr	r3, [r4, #24]
 80007b2:	60a3      	str	r3, [r4, #8]
 80007b4:	89a3      	ldrh	r3, [r4, #12]
 80007b6:	071a      	lsls	r2, r3, #28
 80007b8:	d501      	bpl.n	80007be <__swbuf_r+0x20>
 80007ba:	6923      	ldr	r3, [r4, #16]
 80007bc:	b943      	cbnz	r3, 80007d0 <__swbuf_r+0x32>
 80007be:	4621      	mov	r1, r4
 80007c0:	4628      	mov	r0, r5
 80007c2:	f000 f82b 	bl	800081c <__swsetup_r>
 80007c6:	b118      	cbz	r0, 80007d0 <__swbuf_r+0x32>
 80007c8:	f04f 37ff 	mov.w	r7, #4294967295
 80007cc:	4638      	mov	r0, r7
 80007ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007d0:	6823      	ldr	r3, [r4, #0]
 80007d2:	6922      	ldr	r2, [r4, #16]
 80007d4:	1a98      	subs	r0, r3, r2
 80007d6:	6963      	ldr	r3, [r4, #20]
 80007d8:	b2f6      	uxtb	r6, r6
 80007da:	4283      	cmp	r3, r0
 80007dc:	4637      	mov	r7, r6
 80007de:	dc05      	bgt.n	80007ec <__swbuf_r+0x4e>
 80007e0:	4621      	mov	r1, r4
 80007e2:	4628      	mov	r0, r5
 80007e4:	f000 fd38 	bl	8001258 <_fflush_r>
 80007e8:	2800      	cmp	r0, #0
 80007ea:	d1ed      	bne.n	80007c8 <__swbuf_r+0x2a>
 80007ec:	68a3      	ldr	r3, [r4, #8]
 80007ee:	3b01      	subs	r3, #1
 80007f0:	60a3      	str	r3, [r4, #8]
 80007f2:	6823      	ldr	r3, [r4, #0]
 80007f4:	1c5a      	adds	r2, r3, #1
 80007f6:	6022      	str	r2, [r4, #0]
 80007f8:	701e      	strb	r6, [r3, #0]
 80007fa:	6962      	ldr	r2, [r4, #20]
 80007fc:	1c43      	adds	r3, r0, #1
 80007fe:	429a      	cmp	r2, r3
 8000800:	d004      	beq.n	800080c <__swbuf_r+0x6e>
 8000802:	89a3      	ldrh	r3, [r4, #12]
 8000804:	07db      	lsls	r3, r3, #31
 8000806:	d5e1      	bpl.n	80007cc <__swbuf_r+0x2e>
 8000808:	2e0a      	cmp	r6, #10
 800080a:	d1df      	bne.n	80007cc <__swbuf_r+0x2e>
 800080c:	4621      	mov	r1, r4
 800080e:	4628      	mov	r0, r5
 8000810:	f000 fd22 	bl	8001258 <_fflush_r>
 8000814:	2800      	cmp	r0, #0
 8000816:	d0d9      	beq.n	80007cc <__swbuf_r+0x2e>
 8000818:	e7d6      	b.n	80007c8 <__swbuf_r+0x2a>
	...

0800081c <__swsetup_r>:
 800081c:	b538      	push	{r3, r4, r5, lr}
 800081e:	4b29      	ldr	r3, [pc, #164]	@ (80008c4 <__swsetup_r+0xa8>)
 8000820:	4605      	mov	r5, r0
 8000822:	6818      	ldr	r0, [r3, #0]
 8000824:	460c      	mov	r4, r1
 8000826:	b118      	cbz	r0, 8000830 <__swsetup_r+0x14>
 8000828:	6a03      	ldr	r3, [r0, #32]
 800082a:	b90b      	cbnz	r3, 8000830 <__swsetup_r+0x14>
 800082c:	f7ff fece 	bl	80005cc <__sinit>
 8000830:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000834:	0719      	lsls	r1, r3, #28
 8000836:	d422      	bmi.n	800087e <__swsetup_r+0x62>
 8000838:	06da      	lsls	r2, r3, #27
 800083a:	d407      	bmi.n	800084c <__swsetup_r+0x30>
 800083c:	2209      	movs	r2, #9
 800083e:	602a      	str	r2, [r5, #0]
 8000840:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000844:	81a3      	strh	r3, [r4, #12]
 8000846:	f04f 30ff 	mov.w	r0, #4294967295
 800084a:	e033      	b.n	80008b4 <__swsetup_r+0x98>
 800084c:	0758      	lsls	r0, r3, #29
 800084e:	d512      	bpl.n	8000876 <__swsetup_r+0x5a>
 8000850:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000852:	b141      	cbz	r1, 8000866 <__swsetup_r+0x4a>
 8000854:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000858:	4299      	cmp	r1, r3
 800085a:	d002      	beq.n	8000862 <__swsetup_r+0x46>
 800085c:	4628      	mov	r0, r5
 800085e:	f000 f8af 	bl	80009c0 <_free_r>
 8000862:	2300      	movs	r3, #0
 8000864:	6363      	str	r3, [r4, #52]	@ 0x34
 8000866:	89a3      	ldrh	r3, [r4, #12]
 8000868:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800086c:	81a3      	strh	r3, [r4, #12]
 800086e:	2300      	movs	r3, #0
 8000870:	6063      	str	r3, [r4, #4]
 8000872:	6923      	ldr	r3, [r4, #16]
 8000874:	6023      	str	r3, [r4, #0]
 8000876:	89a3      	ldrh	r3, [r4, #12]
 8000878:	f043 0308 	orr.w	r3, r3, #8
 800087c:	81a3      	strh	r3, [r4, #12]
 800087e:	6923      	ldr	r3, [r4, #16]
 8000880:	b94b      	cbnz	r3, 8000896 <__swsetup_r+0x7a>
 8000882:	89a3      	ldrh	r3, [r4, #12]
 8000884:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8000888:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800088c:	d003      	beq.n	8000896 <__swsetup_r+0x7a>
 800088e:	4621      	mov	r1, r4
 8000890:	4628      	mov	r0, r5
 8000892:	f000 fd2f 	bl	80012f4 <__smakebuf_r>
 8000896:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800089a:	f013 0201 	ands.w	r2, r3, #1
 800089e:	d00a      	beq.n	80008b6 <__swsetup_r+0x9a>
 80008a0:	2200      	movs	r2, #0
 80008a2:	60a2      	str	r2, [r4, #8]
 80008a4:	6962      	ldr	r2, [r4, #20]
 80008a6:	4252      	negs	r2, r2
 80008a8:	61a2      	str	r2, [r4, #24]
 80008aa:	6922      	ldr	r2, [r4, #16]
 80008ac:	b942      	cbnz	r2, 80008c0 <__swsetup_r+0xa4>
 80008ae:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80008b2:	d1c5      	bne.n	8000840 <__swsetup_r+0x24>
 80008b4:	bd38      	pop	{r3, r4, r5, pc}
 80008b6:	0799      	lsls	r1, r3, #30
 80008b8:	bf58      	it	pl
 80008ba:	6962      	ldrpl	r2, [r4, #20]
 80008bc:	60a2      	str	r2, [r4, #8]
 80008be:	e7f4      	b.n	80008aa <__swsetup_r+0x8e>
 80008c0:	2000      	movs	r0, #0
 80008c2:	e7f7      	b.n	80008b4 <__swsetup_r+0x98>
 80008c4:	2000000c 	.word	0x2000000c

080008c8 <memset>:
 80008c8:	4402      	add	r2, r0
 80008ca:	4603      	mov	r3, r0
 80008cc:	4293      	cmp	r3, r2
 80008ce:	d100      	bne.n	80008d2 <memset+0xa>
 80008d0:	4770      	bx	lr
 80008d2:	f803 1b01 	strb.w	r1, [r3], #1
 80008d6:	e7f9      	b.n	80008cc <memset+0x4>

080008d8 <_close_r>:
 80008d8:	b538      	push	{r3, r4, r5, lr}
 80008da:	4d06      	ldr	r5, [pc, #24]	@ (80008f4 <_close_r+0x1c>)
 80008dc:	2300      	movs	r3, #0
 80008de:	4604      	mov	r4, r0
 80008e0:	4608      	mov	r0, r1
 80008e2:	602b      	str	r3, [r5, #0]
 80008e4:	f7ff fd51 	bl	800038a <_close>
 80008e8:	1c43      	adds	r3, r0, #1
 80008ea:	d102      	bne.n	80008f2 <_close_r+0x1a>
 80008ec:	682b      	ldr	r3, [r5, #0]
 80008ee:	b103      	cbz	r3, 80008f2 <_close_r+0x1a>
 80008f0:	6023      	str	r3, [r4, #0]
 80008f2:	bd38      	pop	{r3, r4, r5, pc}
 80008f4:	200001b8 	.word	0x200001b8

080008f8 <_lseek_r>:
 80008f8:	b538      	push	{r3, r4, r5, lr}
 80008fa:	4d07      	ldr	r5, [pc, #28]	@ (8000918 <_lseek_r+0x20>)
 80008fc:	4604      	mov	r4, r0
 80008fe:	4608      	mov	r0, r1
 8000900:	4611      	mov	r1, r2
 8000902:	2200      	movs	r2, #0
 8000904:	602a      	str	r2, [r5, #0]
 8000906:	461a      	mov	r2, r3
 8000908:	f7ff fd66 	bl	80003d8 <_lseek>
 800090c:	1c43      	adds	r3, r0, #1
 800090e:	d102      	bne.n	8000916 <_lseek_r+0x1e>
 8000910:	682b      	ldr	r3, [r5, #0]
 8000912:	b103      	cbz	r3, 8000916 <_lseek_r+0x1e>
 8000914:	6023      	str	r3, [r4, #0]
 8000916:	bd38      	pop	{r3, r4, r5, pc}
 8000918:	200001b8 	.word	0x200001b8

0800091c <_read_r>:
 800091c:	b538      	push	{r3, r4, r5, lr}
 800091e:	4d07      	ldr	r5, [pc, #28]	@ (800093c <_read_r+0x20>)
 8000920:	4604      	mov	r4, r0
 8000922:	4608      	mov	r0, r1
 8000924:	4611      	mov	r1, r2
 8000926:	2200      	movs	r2, #0
 8000928:	602a      	str	r2, [r5, #0]
 800092a:	461a      	mov	r2, r3
 800092c:	f7ff fcf4 	bl	8000318 <_read>
 8000930:	1c43      	adds	r3, r0, #1
 8000932:	d102      	bne.n	800093a <_read_r+0x1e>
 8000934:	682b      	ldr	r3, [r5, #0]
 8000936:	b103      	cbz	r3, 800093a <_read_r+0x1e>
 8000938:	6023      	str	r3, [r4, #0]
 800093a:	bd38      	pop	{r3, r4, r5, pc}
 800093c:	200001b8 	.word	0x200001b8

08000940 <_write_r>:
 8000940:	b538      	push	{r3, r4, r5, lr}
 8000942:	4d07      	ldr	r5, [pc, #28]	@ (8000960 <_write_r+0x20>)
 8000944:	4604      	mov	r4, r0
 8000946:	4608      	mov	r0, r1
 8000948:	4611      	mov	r1, r2
 800094a:	2200      	movs	r2, #0
 800094c:	602a      	str	r2, [r5, #0]
 800094e:	461a      	mov	r2, r3
 8000950:	f7ff fcff 	bl	8000352 <_write>
 8000954:	1c43      	adds	r3, r0, #1
 8000956:	d102      	bne.n	800095e <_write_r+0x1e>
 8000958:	682b      	ldr	r3, [r5, #0]
 800095a:	b103      	cbz	r3, 800095e <_write_r+0x1e>
 800095c:	6023      	str	r3, [r4, #0]
 800095e:	bd38      	pop	{r3, r4, r5, pc}
 8000960:	200001b8 	.word	0x200001b8

08000964 <__errno>:
 8000964:	4b01      	ldr	r3, [pc, #4]	@ (800096c <__errno+0x8>)
 8000966:	6818      	ldr	r0, [r3, #0]
 8000968:	4770      	bx	lr
 800096a:	bf00      	nop
 800096c:	2000000c 	.word	0x2000000c

08000970 <__libc_init_array>:
 8000970:	b570      	push	{r4, r5, r6, lr}
 8000972:	4d0d      	ldr	r5, [pc, #52]	@ (80009a8 <__libc_init_array+0x38>)
 8000974:	4c0d      	ldr	r4, [pc, #52]	@ (80009ac <__libc_init_array+0x3c>)
 8000976:	1b64      	subs	r4, r4, r5
 8000978:	10a4      	asrs	r4, r4, #2
 800097a:	2600      	movs	r6, #0
 800097c:	42a6      	cmp	r6, r4
 800097e:	d109      	bne.n	8000994 <__libc_init_array+0x24>
 8000980:	4d0b      	ldr	r5, [pc, #44]	@ (80009b0 <__libc_init_array+0x40>)
 8000982:	4c0c      	ldr	r4, [pc, #48]	@ (80009b4 <__libc_init_array+0x44>)
 8000984:	f000 fd24 	bl	80013d0 <_init>
 8000988:	1b64      	subs	r4, r4, r5
 800098a:	10a4      	asrs	r4, r4, #2
 800098c:	2600      	movs	r6, #0
 800098e:	42a6      	cmp	r6, r4
 8000990:	d105      	bne.n	800099e <__libc_init_array+0x2e>
 8000992:	bd70      	pop	{r4, r5, r6, pc}
 8000994:	f855 3b04 	ldr.w	r3, [r5], #4
 8000998:	4798      	blx	r3
 800099a:	3601      	adds	r6, #1
 800099c:	e7ee      	b.n	800097c <__libc_init_array+0xc>
 800099e:	f855 3b04 	ldr.w	r3, [r5], #4
 80009a2:	4798      	blx	r3
 80009a4:	3601      	adds	r6, #1
 80009a6:	e7f2      	b.n	800098e <__libc_init_array+0x1e>
 80009a8:	08001444 	.word	0x08001444
 80009ac:	08001444 	.word	0x08001444
 80009b0:	08001444 	.word	0x08001444
 80009b4:	08001448 	.word	0x08001448

080009b8 <__retarget_lock_init_recursive>:
 80009b8:	4770      	bx	lr

080009ba <__retarget_lock_acquire_recursive>:
 80009ba:	4770      	bx	lr

080009bc <__retarget_lock_release_recursive>:
 80009bc:	4770      	bx	lr
	...

080009c0 <_free_r>:
 80009c0:	b538      	push	{r3, r4, r5, lr}
 80009c2:	4605      	mov	r5, r0
 80009c4:	2900      	cmp	r1, #0
 80009c6:	d041      	beq.n	8000a4c <_free_r+0x8c>
 80009c8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80009cc:	1f0c      	subs	r4, r1, #4
 80009ce:	2b00      	cmp	r3, #0
 80009d0:	bfb8      	it	lt
 80009d2:	18e4      	addlt	r4, r4, r3
 80009d4:	f000 f8e0 	bl	8000b98 <__malloc_lock>
 80009d8:	4a1d      	ldr	r2, [pc, #116]	@ (8000a50 <_free_r+0x90>)
 80009da:	6813      	ldr	r3, [r2, #0]
 80009dc:	b933      	cbnz	r3, 80009ec <_free_r+0x2c>
 80009de:	6063      	str	r3, [r4, #4]
 80009e0:	6014      	str	r4, [r2, #0]
 80009e2:	4628      	mov	r0, r5
 80009e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80009e8:	f000 b8dc 	b.w	8000ba4 <__malloc_unlock>
 80009ec:	42a3      	cmp	r3, r4
 80009ee:	d908      	bls.n	8000a02 <_free_r+0x42>
 80009f0:	6820      	ldr	r0, [r4, #0]
 80009f2:	1821      	adds	r1, r4, r0
 80009f4:	428b      	cmp	r3, r1
 80009f6:	bf01      	itttt	eq
 80009f8:	6819      	ldreq	r1, [r3, #0]
 80009fa:	685b      	ldreq	r3, [r3, #4]
 80009fc:	1809      	addeq	r1, r1, r0
 80009fe:	6021      	streq	r1, [r4, #0]
 8000a00:	e7ed      	b.n	80009de <_free_r+0x1e>
 8000a02:	461a      	mov	r2, r3
 8000a04:	685b      	ldr	r3, [r3, #4]
 8000a06:	b10b      	cbz	r3, 8000a0c <_free_r+0x4c>
 8000a08:	42a3      	cmp	r3, r4
 8000a0a:	d9fa      	bls.n	8000a02 <_free_r+0x42>
 8000a0c:	6811      	ldr	r1, [r2, #0]
 8000a0e:	1850      	adds	r0, r2, r1
 8000a10:	42a0      	cmp	r0, r4
 8000a12:	d10b      	bne.n	8000a2c <_free_r+0x6c>
 8000a14:	6820      	ldr	r0, [r4, #0]
 8000a16:	4401      	add	r1, r0
 8000a18:	1850      	adds	r0, r2, r1
 8000a1a:	4283      	cmp	r3, r0
 8000a1c:	6011      	str	r1, [r2, #0]
 8000a1e:	d1e0      	bne.n	80009e2 <_free_r+0x22>
 8000a20:	6818      	ldr	r0, [r3, #0]
 8000a22:	685b      	ldr	r3, [r3, #4]
 8000a24:	6053      	str	r3, [r2, #4]
 8000a26:	4408      	add	r0, r1
 8000a28:	6010      	str	r0, [r2, #0]
 8000a2a:	e7da      	b.n	80009e2 <_free_r+0x22>
 8000a2c:	d902      	bls.n	8000a34 <_free_r+0x74>
 8000a2e:	230c      	movs	r3, #12
 8000a30:	602b      	str	r3, [r5, #0]
 8000a32:	e7d6      	b.n	80009e2 <_free_r+0x22>
 8000a34:	6820      	ldr	r0, [r4, #0]
 8000a36:	1821      	adds	r1, r4, r0
 8000a38:	428b      	cmp	r3, r1
 8000a3a:	bf04      	itt	eq
 8000a3c:	6819      	ldreq	r1, [r3, #0]
 8000a3e:	685b      	ldreq	r3, [r3, #4]
 8000a40:	6063      	str	r3, [r4, #4]
 8000a42:	bf04      	itt	eq
 8000a44:	1809      	addeq	r1, r1, r0
 8000a46:	6021      	streq	r1, [r4, #0]
 8000a48:	6054      	str	r4, [r2, #4]
 8000a4a:	e7ca      	b.n	80009e2 <_free_r+0x22>
 8000a4c:	bd38      	pop	{r3, r4, r5, pc}
 8000a4e:	bf00      	nop
 8000a50:	200001c4 	.word	0x200001c4

08000a54 <sbrk_aligned>:
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	4e0f      	ldr	r6, [pc, #60]	@ (8000a94 <sbrk_aligned+0x40>)
 8000a58:	460c      	mov	r4, r1
 8000a5a:	6831      	ldr	r1, [r6, #0]
 8000a5c:	4605      	mov	r5, r0
 8000a5e:	b911      	cbnz	r1, 8000a66 <sbrk_aligned+0x12>
 8000a60:	f000 fca6 	bl	80013b0 <_sbrk_r>
 8000a64:	6030      	str	r0, [r6, #0]
 8000a66:	4621      	mov	r1, r4
 8000a68:	4628      	mov	r0, r5
 8000a6a:	f000 fca1 	bl	80013b0 <_sbrk_r>
 8000a6e:	1c43      	adds	r3, r0, #1
 8000a70:	d103      	bne.n	8000a7a <sbrk_aligned+0x26>
 8000a72:	f04f 34ff 	mov.w	r4, #4294967295
 8000a76:	4620      	mov	r0, r4
 8000a78:	bd70      	pop	{r4, r5, r6, pc}
 8000a7a:	1cc4      	adds	r4, r0, #3
 8000a7c:	f024 0403 	bic.w	r4, r4, #3
 8000a80:	42a0      	cmp	r0, r4
 8000a82:	d0f8      	beq.n	8000a76 <sbrk_aligned+0x22>
 8000a84:	1a21      	subs	r1, r4, r0
 8000a86:	4628      	mov	r0, r5
 8000a88:	f000 fc92 	bl	80013b0 <_sbrk_r>
 8000a8c:	3001      	adds	r0, #1
 8000a8e:	d1f2      	bne.n	8000a76 <sbrk_aligned+0x22>
 8000a90:	e7ef      	b.n	8000a72 <sbrk_aligned+0x1e>
 8000a92:	bf00      	nop
 8000a94:	200001c0 	.word	0x200001c0

08000a98 <_malloc_r>:
 8000a98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a9c:	1ccd      	adds	r5, r1, #3
 8000a9e:	f025 0503 	bic.w	r5, r5, #3
 8000aa2:	3508      	adds	r5, #8
 8000aa4:	2d0c      	cmp	r5, #12
 8000aa6:	bf38      	it	cc
 8000aa8:	250c      	movcc	r5, #12
 8000aaa:	2d00      	cmp	r5, #0
 8000aac:	4606      	mov	r6, r0
 8000aae:	db01      	blt.n	8000ab4 <_malloc_r+0x1c>
 8000ab0:	42a9      	cmp	r1, r5
 8000ab2:	d904      	bls.n	8000abe <_malloc_r+0x26>
 8000ab4:	230c      	movs	r3, #12
 8000ab6:	6033      	str	r3, [r6, #0]
 8000ab8:	2000      	movs	r0, #0
 8000aba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000abe:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000b94 <_malloc_r+0xfc>
 8000ac2:	f000 f869 	bl	8000b98 <__malloc_lock>
 8000ac6:	f8d8 3000 	ldr.w	r3, [r8]
 8000aca:	461c      	mov	r4, r3
 8000acc:	bb44      	cbnz	r4, 8000b20 <_malloc_r+0x88>
 8000ace:	4629      	mov	r1, r5
 8000ad0:	4630      	mov	r0, r6
 8000ad2:	f7ff ffbf 	bl	8000a54 <sbrk_aligned>
 8000ad6:	1c43      	adds	r3, r0, #1
 8000ad8:	4604      	mov	r4, r0
 8000ada:	d158      	bne.n	8000b8e <_malloc_r+0xf6>
 8000adc:	f8d8 4000 	ldr.w	r4, [r8]
 8000ae0:	4627      	mov	r7, r4
 8000ae2:	2f00      	cmp	r7, #0
 8000ae4:	d143      	bne.n	8000b6e <_malloc_r+0xd6>
 8000ae6:	2c00      	cmp	r4, #0
 8000ae8:	d04b      	beq.n	8000b82 <_malloc_r+0xea>
 8000aea:	6823      	ldr	r3, [r4, #0]
 8000aec:	4639      	mov	r1, r7
 8000aee:	4630      	mov	r0, r6
 8000af0:	eb04 0903 	add.w	r9, r4, r3
 8000af4:	f000 fc5c 	bl	80013b0 <_sbrk_r>
 8000af8:	4581      	cmp	r9, r0
 8000afa:	d142      	bne.n	8000b82 <_malloc_r+0xea>
 8000afc:	6821      	ldr	r1, [r4, #0]
 8000afe:	1a6d      	subs	r5, r5, r1
 8000b00:	4629      	mov	r1, r5
 8000b02:	4630      	mov	r0, r6
 8000b04:	f7ff ffa6 	bl	8000a54 <sbrk_aligned>
 8000b08:	3001      	adds	r0, #1
 8000b0a:	d03a      	beq.n	8000b82 <_malloc_r+0xea>
 8000b0c:	6823      	ldr	r3, [r4, #0]
 8000b0e:	442b      	add	r3, r5
 8000b10:	6023      	str	r3, [r4, #0]
 8000b12:	f8d8 3000 	ldr.w	r3, [r8]
 8000b16:	685a      	ldr	r2, [r3, #4]
 8000b18:	bb62      	cbnz	r2, 8000b74 <_malloc_r+0xdc>
 8000b1a:	f8c8 7000 	str.w	r7, [r8]
 8000b1e:	e00f      	b.n	8000b40 <_malloc_r+0xa8>
 8000b20:	6822      	ldr	r2, [r4, #0]
 8000b22:	1b52      	subs	r2, r2, r5
 8000b24:	d420      	bmi.n	8000b68 <_malloc_r+0xd0>
 8000b26:	2a0b      	cmp	r2, #11
 8000b28:	d917      	bls.n	8000b5a <_malloc_r+0xc2>
 8000b2a:	1961      	adds	r1, r4, r5
 8000b2c:	42a3      	cmp	r3, r4
 8000b2e:	6025      	str	r5, [r4, #0]
 8000b30:	bf18      	it	ne
 8000b32:	6059      	strne	r1, [r3, #4]
 8000b34:	6863      	ldr	r3, [r4, #4]
 8000b36:	bf08      	it	eq
 8000b38:	f8c8 1000 	streq.w	r1, [r8]
 8000b3c:	5162      	str	r2, [r4, r5]
 8000b3e:	604b      	str	r3, [r1, #4]
 8000b40:	4630      	mov	r0, r6
 8000b42:	f000 f82f 	bl	8000ba4 <__malloc_unlock>
 8000b46:	f104 000b 	add.w	r0, r4, #11
 8000b4a:	1d23      	adds	r3, r4, #4
 8000b4c:	f020 0007 	bic.w	r0, r0, #7
 8000b50:	1ac2      	subs	r2, r0, r3
 8000b52:	bf1c      	itt	ne
 8000b54:	1a1b      	subne	r3, r3, r0
 8000b56:	50a3      	strne	r3, [r4, r2]
 8000b58:	e7af      	b.n	8000aba <_malloc_r+0x22>
 8000b5a:	6862      	ldr	r2, [r4, #4]
 8000b5c:	42a3      	cmp	r3, r4
 8000b5e:	bf0c      	ite	eq
 8000b60:	f8c8 2000 	streq.w	r2, [r8]
 8000b64:	605a      	strne	r2, [r3, #4]
 8000b66:	e7eb      	b.n	8000b40 <_malloc_r+0xa8>
 8000b68:	4623      	mov	r3, r4
 8000b6a:	6864      	ldr	r4, [r4, #4]
 8000b6c:	e7ae      	b.n	8000acc <_malloc_r+0x34>
 8000b6e:	463c      	mov	r4, r7
 8000b70:	687f      	ldr	r7, [r7, #4]
 8000b72:	e7b6      	b.n	8000ae2 <_malloc_r+0x4a>
 8000b74:	461a      	mov	r2, r3
 8000b76:	685b      	ldr	r3, [r3, #4]
 8000b78:	42a3      	cmp	r3, r4
 8000b7a:	d1fb      	bne.n	8000b74 <_malloc_r+0xdc>
 8000b7c:	2300      	movs	r3, #0
 8000b7e:	6053      	str	r3, [r2, #4]
 8000b80:	e7de      	b.n	8000b40 <_malloc_r+0xa8>
 8000b82:	230c      	movs	r3, #12
 8000b84:	6033      	str	r3, [r6, #0]
 8000b86:	4630      	mov	r0, r6
 8000b88:	f000 f80c 	bl	8000ba4 <__malloc_unlock>
 8000b8c:	e794      	b.n	8000ab8 <_malloc_r+0x20>
 8000b8e:	6005      	str	r5, [r0, #0]
 8000b90:	e7d6      	b.n	8000b40 <_malloc_r+0xa8>
 8000b92:	bf00      	nop
 8000b94:	200001c4 	.word	0x200001c4

08000b98 <__malloc_lock>:
 8000b98:	4801      	ldr	r0, [pc, #4]	@ (8000ba0 <__malloc_lock+0x8>)
 8000b9a:	f7ff bf0e 	b.w	80009ba <__retarget_lock_acquire_recursive>
 8000b9e:	bf00      	nop
 8000ba0:	200001bc 	.word	0x200001bc

08000ba4 <__malloc_unlock>:
 8000ba4:	4801      	ldr	r0, [pc, #4]	@ (8000bac <__malloc_unlock+0x8>)
 8000ba6:	f7ff bf09 	b.w	80009bc <__retarget_lock_release_recursive>
 8000baa:	bf00      	nop
 8000bac:	200001bc 	.word	0x200001bc

08000bb0 <__sfputc_r>:
 8000bb0:	6893      	ldr	r3, [r2, #8]
 8000bb2:	3b01      	subs	r3, #1
 8000bb4:	2b00      	cmp	r3, #0
 8000bb6:	b410      	push	{r4}
 8000bb8:	6093      	str	r3, [r2, #8]
 8000bba:	da08      	bge.n	8000bce <__sfputc_r+0x1e>
 8000bbc:	6994      	ldr	r4, [r2, #24]
 8000bbe:	42a3      	cmp	r3, r4
 8000bc0:	db01      	blt.n	8000bc6 <__sfputc_r+0x16>
 8000bc2:	290a      	cmp	r1, #10
 8000bc4:	d103      	bne.n	8000bce <__sfputc_r+0x1e>
 8000bc6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000bca:	f7ff bde8 	b.w	800079e <__swbuf_r>
 8000bce:	6813      	ldr	r3, [r2, #0]
 8000bd0:	1c58      	adds	r0, r3, #1
 8000bd2:	6010      	str	r0, [r2, #0]
 8000bd4:	7019      	strb	r1, [r3, #0]
 8000bd6:	4608      	mov	r0, r1
 8000bd8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000bdc:	4770      	bx	lr

08000bde <__sfputs_r>:
 8000bde:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000be0:	4606      	mov	r6, r0
 8000be2:	460f      	mov	r7, r1
 8000be4:	4614      	mov	r4, r2
 8000be6:	18d5      	adds	r5, r2, r3
 8000be8:	42ac      	cmp	r4, r5
 8000bea:	d101      	bne.n	8000bf0 <__sfputs_r+0x12>
 8000bec:	2000      	movs	r0, #0
 8000bee:	e007      	b.n	8000c00 <__sfputs_r+0x22>
 8000bf0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bf4:	463a      	mov	r2, r7
 8000bf6:	4630      	mov	r0, r6
 8000bf8:	f7ff ffda 	bl	8000bb0 <__sfputc_r>
 8000bfc:	1c43      	adds	r3, r0, #1
 8000bfe:	d1f3      	bne.n	8000be8 <__sfputs_r+0xa>
 8000c00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000c04 <_vfiprintf_r>:
 8000c04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000c08:	460d      	mov	r5, r1
 8000c0a:	b09d      	sub	sp, #116	@ 0x74
 8000c0c:	4614      	mov	r4, r2
 8000c0e:	4698      	mov	r8, r3
 8000c10:	4606      	mov	r6, r0
 8000c12:	b118      	cbz	r0, 8000c1c <_vfiprintf_r+0x18>
 8000c14:	6a03      	ldr	r3, [r0, #32]
 8000c16:	b90b      	cbnz	r3, 8000c1c <_vfiprintf_r+0x18>
 8000c18:	f7ff fcd8 	bl	80005cc <__sinit>
 8000c1c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000c1e:	07d9      	lsls	r1, r3, #31
 8000c20:	d405      	bmi.n	8000c2e <_vfiprintf_r+0x2a>
 8000c22:	89ab      	ldrh	r3, [r5, #12]
 8000c24:	059a      	lsls	r2, r3, #22
 8000c26:	d402      	bmi.n	8000c2e <_vfiprintf_r+0x2a>
 8000c28:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000c2a:	f7ff fec6 	bl	80009ba <__retarget_lock_acquire_recursive>
 8000c2e:	89ab      	ldrh	r3, [r5, #12]
 8000c30:	071b      	lsls	r3, r3, #28
 8000c32:	d501      	bpl.n	8000c38 <_vfiprintf_r+0x34>
 8000c34:	692b      	ldr	r3, [r5, #16]
 8000c36:	b99b      	cbnz	r3, 8000c60 <_vfiprintf_r+0x5c>
 8000c38:	4629      	mov	r1, r5
 8000c3a:	4630      	mov	r0, r6
 8000c3c:	f7ff fdee 	bl	800081c <__swsetup_r>
 8000c40:	b170      	cbz	r0, 8000c60 <_vfiprintf_r+0x5c>
 8000c42:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000c44:	07dc      	lsls	r4, r3, #31
 8000c46:	d504      	bpl.n	8000c52 <_vfiprintf_r+0x4e>
 8000c48:	f04f 30ff 	mov.w	r0, #4294967295
 8000c4c:	b01d      	add	sp, #116	@ 0x74
 8000c4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000c52:	89ab      	ldrh	r3, [r5, #12]
 8000c54:	0598      	lsls	r0, r3, #22
 8000c56:	d4f7      	bmi.n	8000c48 <_vfiprintf_r+0x44>
 8000c58:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000c5a:	f7ff feaf 	bl	80009bc <__retarget_lock_release_recursive>
 8000c5e:	e7f3      	b.n	8000c48 <_vfiprintf_r+0x44>
 8000c60:	2300      	movs	r3, #0
 8000c62:	9309      	str	r3, [sp, #36]	@ 0x24
 8000c64:	2320      	movs	r3, #32
 8000c66:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000c6a:	f8cd 800c 	str.w	r8, [sp, #12]
 8000c6e:	2330      	movs	r3, #48	@ 0x30
 8000c70:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000e20 <_vfiprintf_r+0x21c>
 8000c74:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000c78:	f04f 0901 	mov.w	r9, #1
 8000c7c:	4623      	mov	r3, r4
 8000c7e:	469a      	mov	sl, r3
 8000c80:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000c84:	b10a      	cbz	r2, 8000c8a <_vfiprintf_r+0x86>
 8000c86:	2a25      	cmp	r2, #37	@ 0x25
 8000c88:	d1f9      	bne.n	8000c7e <_vfiprintf_r+0x7a>
 8000c8a:	ebba 0b04 	subs.w	fp, sl, r4
 8000c8e:	d00b      	beq.n	8000ca8 <_vfiprintf_r+0xa4>
 8000c90:	465b      	mov	r3, fp
 8000c92:	4622      	mov	r2, r4
 8000c94:	4629      	mov	r1, r5
 8000c96:	4630      	mov	r0, r6
 8000c98:	f7ff ffa1 	bl	8000bde <__sfputs_r>
 8000c9c:	3001      	adds	r0, #1
 8000c9e:	f000 80a7 	beq.w	8000df0 <_vfiprintf_r+0x1ec>
 8000ca2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000ca4:	445a      	add	r2, fp
 8000ca6:	9209      	str	r2, [sp, #36]	@ 0x24
 8000ca8:	f89a 3000 	ldrb.w	r3, [sl]
 8000cac:	2b00      	cmp	r3, #0
 8000cae:	f000 809f 	beq.w	8000df0 <_vfiprintf_r+0x1ec>
 8000cb2:	2300      	movs	r3, #0
 8000cb4:	f04f 32ff 	mov.w	r2, #4294967295
 8000cb8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000cbc:	f10a 0a01 	add.w	sl, sl, #1
 8000cc0:	9304      	str	r3, [sp, #16]
 8000cc2:	9307      	str	r3, [sp, #28]
 8000cc4:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000cc8:	931a      	str	r3, [sp, #104]	@ 0x68
 8000cca:	4654      	mov	r4, sl
 8000ccc:	2205      	movs	r2, #5
 8000cce:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000cd2:	4853      	ldr	r0, [pc, #332]	@ (8000e20 <_vfiprintf_r+0x21c>)
 8000cd4:	f7ff fa7c 	bl	80001d0 <memchr>
 8000cd8:	9a04      	ldr	r2, [sp, #16]
 8000cda:	b9d8      	cbnz	r0, 8000d14 <_vfiprintf_r+0x110>
 8000cdc:	06d1      	lsls	r1, r2, #27
 8000cde:	bf44      	itt	mi
 8000ce0:	2320      	movmi	r3, #32
 8000ce2:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000ce6:	0713      	lsls	r3, r2, #28
 8000ce8:	bf44      	itt	mi
 8000cea:	232b      	movmi	r3, #43	@ 0x2b
 8000cec:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000cf0:	f89a 3000 	ldrb.w	r3, [sl]
 8000cf4:	2b2a      	cmp	r3, #42	@ 0x2a
 8000cf6:	d015      	beq.n	8000d24 <_vfiprintf_r+0x120>
 8000cf8:	9a07      	ldr	r2, [sp, #28]
 8000cfa:	4654      	mov	r4, sl
 8000cfc:	2000      	movs	r0, #0
 8000cfe:	f04f 0c0a 	mov.w	ip, #10
 8000d02:	4621      	mov	r1, r4
 8000d04:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000d08:	3b30      	subs	r3, #48	@ 0x30
 8000d0a:	2b09      	cmp	r3, #9
 8000d0c:	d94b      	bls.n	8000da6 <_vfiprintf_r+0x1a2>
 8000d0e:	b1b0      	cbz	r0, 8000d3e <_vfiprintf_r+0x13a>
 8000d10:	9207      	str	r2, [sp, #28]
 8000d12:	e014      	b.n	8000d3e <_vfiprintf_r+0x13a>
 8000d14:	eba0 0308 	sub.w	r3, r0, r8
 8000d18:	fa09 f303 	lsl.w	r3, r9, r3
 8000d1c:	4313      	orrs	r3, r2
 8000d1e:	9304      	str	r3, [sp, #16]
 8000d20:	46a2      	mov	sl, r4
 8000d22:	e7d2      	b.n	8000cca <_vfiprintf_r+0xc6>
 8000d24:	9b03      	ldr	r3, [sp, #12]
 8000d26:	1d19      	adds	r1, r3, #4
 8000d28:	681b      	ldr	r3, [r3, #0]
 8000d2a:	9103      	str	r1, [sp, #12]
 8000d2c:	2b00      	cmp	r3, #0
 8000d2e:	bfbb      	ittet	lt
 8000d30:	425b      	neglt	r3, r3
 8000d32:	f042 0202 	orrlt.w	r2, r2, #2
 8000d36:	9307      	strge	r3, [sp, #28]
 8000d38:	9307      	strlt	r3, [sp, #28]
 8000d3a:	bfb8      	it	lt
 8000d3c:	9204      	strlt	r2, [sp, #16]
 8000d3e:	7823      	ldrb	r3, [r4, #0]
 8000d40:	2b2e      	cmp	r3, #46	@ 0x2e
 8000d42:	d10a      	bne.n	8000d5a <_vfiprintf_r+0x156>
 8000d44:	7863      	ldrb	r3, [r4, #1]
 8000d46:	2b2a      	cmp	r3, #42	@ 0x2a
 8000d48:	d132      	bne.n	8000db0 <_vfiprintf_r+0x1ac>
 8000d4a:	9b03      	ldr	r3, [sp, #12]
 8000d4c:	1d1a      	adds	r2, r3, #4
 8000d4e:	681b      	ldr	r3, [r3, #0]
 8000d50:	9203      	str	r2, [sp, #12]
 8000d52:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000d56:	3402      	adds	r4, #2
 8000d58:	9305      	str	r3, [sp, #20]
 8000d5a:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8000e30 <_vfiprintf_r+0x22c>
 8000d5e:	7821      	ldrb	r1, [r4, #0]
 8000d60:	2203      	movs	r2, #3
 8000d62:	4650      	mov	r0, sl
 8000d64:	f7ff fa34 	bl	80001d0 <memchr>
 8000d68:	b138      	cbz	r0, 8000d7a <_vfiprintf_r+0x176>
 8000d6a:	9b04      	ldr	r3, [sp, #16]
 8000d6c:	eba0 000a 	sub.w	r0, r0, sl
 8000d70:	2240      	movs	r2, #64	@ 0x40
 8000d72:	4082      	lsls	r2, r0
 8000d74:	4313      	orrs	r3, r2
 8000d76:	3401      	adds	r4, #1
 8000d78:	9304      	str	r3, [sp, #16]
 8000d7a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d7e:	4829      	ldr	r0, [pc, #164]	@ (8000e24 <_vfiprintf_r+0x220>)
 8000d80:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000d84:	2206      	movs	r2, #6
 8000d86:	f7ff fa23 	bl	80001d0 <memchr>
 8000d8a:	2800      	cmp	r0, #0
 8000d8c:	d03f      	beq.n	8000e0e <_vfiprintf_r+0x20a>
 8000d8e:	4b26      	ldr	r3, [pc, #152]	@ (8000e28 <_vfiprintf_r+0x224>)
 8000d90:	bb1b      	cbnz	r3, 8000dda <_vfiprintf_r+0x1d6>
 8000d92:	9b03      	ldr	r3, [sp, #12]
 8000d94:	3307      	adds	r3, #7
 8000d96:	f023 0307 	bic.w	r3, r3, #7
 8000d9a:	3308      	adds	r3, #8
 8000d9c:	9303      	str	r3, [sp, #12]
 8000d9e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000da0:	443b      	add	r3, r7
 8000da2:	9309      	str	r3, [sp, #36]	@ 0x24
 8000da4:	e76a      	b.n	8000c7c <_vfiprintf_r+0x78>
 8000da6:	fb0c 3202 	mla	r2, ip, r2, r3
 8000daa:	460c      	mov	r4, r1
 8000dac:	2001      	movs	r0, #1
 8000dae:	e7a8      	b.n	8000d02 <_vfiprintf_r+0xfe>
 8000db0:	2300      	movs	r3, #0
 8000db2:	3401      	adds	r4, #1
 8000db4:	9305      	str	r3, [sp, #20]
 8000db6:	4619      	mov	r1, r3
 8000db8:	f04f 0c0a 	mov.w	ip, #10
 8000dbc:	4620      	mov	r0, r4
 8000dbe:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000dc2:	3a30      	subs	r2, #48	@ 0x30
 8000dc4:	2a09      	cmp	r2, #9
 8000dc6:	d903      	bls.n	8000dd0 <_vfiprintf_r+0x1cc>
 8000dc8:	2b00      	cmp	r3, #0
 8000dca:	d0c6      	beq.n	8000d5a <_vfiprintf_r+0x156>
 8000dcc:	9105      	str	r1, [sp, #20]
 8000dce:	e7c4      	b.n	8000d5a <_vfiprintf_r+0x156>
 8000dd0:	fb0c 2101 	mla	r1, ip, r1, r2
 8000dd4:	4604      	mov	r4, r0
 8000dd6:	2301      	movs	r3, #1
 8000dd8:	e7f0      	b.n	8000dbc <_vfiprintf_r+0x1b8>
 8000dda:	ab03      	add	r3, sp, #12
 8000ddc:	9300      	str	r3, [sp, #0]
 8000dde:	462a      	mov	r2, r5
 8000de0:	4b12      	ldr	r3, [pc, #72]	@ (8000e2c <_vfiprintf_r+0x228>)
 8000de2:	a904      	add	r1, sp, #16
 8000de4:	4630      	mov	r0, r6
 8000de6:	f3af 8000 	nop.w
 8000dea:	4607      	mov	r7, r0
 8000dec:	1c78      	adds	r0, r7, #1
 8000dee:	d1d6      	bne.n	8000d9e <_vfiprintf_r+0x19a>
 8000df0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000df2:	07d9      	lsls	r1, r3, #31
 8000df4:	d405      	bmi.n	8000e02 <_vfiprintf_r+0x1fe>
 8000df6:	89ab      	ldrh	r3, [r5, #12]
 8000df8:	059a      	lsls	r2, r3, #22
 8000dfa:	d402      	bmi.n	8000e02 <_vfiprintf_r+0x1fe>
 8000dfc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000dfe:	f7ff fddd 	bl	80009bc <__retarget_lock_release_recursive>
 8000e02:	89ab      	ldrh	r3, [r5, #12]
 8000e04:	065b      	lsls	r3, r3, #25
 8000e06:	f53f af1f 	bmi.w	8000c48 <_vfiprintf_r+0x44>
 8000e0a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000e0c:	e71e      	b.n	8000c4c <_vfiprintf_r+0x48>
 8000e0e:	ab03      	add	r3, sp, #12
 8000e10:	9300      	str	r3, [sp, #0]
 8000e12:	462a      	mov	r2, r5
 8000e14:	4b05      	ldr	r3, [pc, #20]	@ (8000e2c <_vfiprintf_r+0x228>)
 8000e16:	a904      	add	r1, sp, #16
 8000e18:	4630      	mov	r0, r6
 8000e1a:	f000 f879 	bl	8000f10 <_printf_i>
 8000e1e:	e7e4      	b.n	8000dea <_vfiprintf_r+0x1e6>
 8000e20:	08001407 	.word	0x08001407
 8000e24:	08001411 	.word	0x08001411
 8000e28:	00000000 	.word	0x00000000
 8000e2c:	08000bdf 	.word	0x08000bdf
 8000e30:	0800140d 	.word	0x0800140d

08000e34 <_printf_common>:
 8000e34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000e38:	4616      	mov	r6, r2
 8000e3a:	4698      	mov	r8, r3
 8000e3c:	688a      	ldr	r2, [r1, #8]
 8000e3e:	690b      	ldr	r3, [r1, #16]
 8000e40:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000e44:	4293      	cmp	r3, r2
 8000e46:	bfb8      	it	lt
 8000e48:	4613      	movlt	r3, r2
 8000e4a:	6033      	str	r3, [r6, #0]
 8000e4c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000e50:	4607      	mov	r7, r0
 8000e52:	460c      	mov	r4, r1
 8000e54:	b10a      	cbz	r2, 8000e5a <_printf_common+0x26>
 8000e56:	3301      	adds	r3, #1
 8000e58:	6033      	str	r3, [r6, #0]
 8000e5a:	6823      	ldr	r3, [r4, #0]
 8000e5c:	0699      	lsls	r1, r3, #26
 8000e5e:	bf42      	ittt	mi
 8000e60:	6833      	ldrmi	r3, [r6, #0]
 8000e62:	3302      	addmi	r3, #2
 8000e64:	6033      	strmi	r3, [r6, #0]
 8000e66:	6825      	ldr	r5, [r4, #0]
 8000e68:	f015 0506 	ands.w	r5, r5, #6
 8000e6c:	d106      	bne.n	8000e7c <_printf_common+0x48>
 8000e6e:	f104 0a19 	add.w	sl, r4, #25
 8000e72:	68e3      	ldr	r3, [r4, #12]
 8000e74:	6832      	ldr	r2, [r6, #0]
 8000e76:	1a9b      	subs	r3, r3, r2
 8000e78:	42ab      	cmp	r3, r5
 8000e7a:	dc26      	bgt.n	8000eca <_printf_common+0x96>
 8000e7c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000e80:	6822      	ldr	r2, [r4, #0]
 8000e82:	3b00      	subs	r3, #0
 8000e84:	bf18      	it	ne
 8000e86:	2301      	movne	r3, #1
 8000e88:	0692      	lsls	r2, r2, #26
 8000e8a:	d42b      	bmi.n	8000ee4 <_printf_common+0xb0>
 8000e8c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000e90:	4641      	mov	r1, r8
 8000e92:	4638      	mov	r0, r7
 8000e94:	47c8      	blx	r9
 8000e96:	3001      	adds	r0, #1
 8000e98:	d01e      	beq.n	8000ed8 <_printf_common+0xa4>
 8000e9a:	6823      	ldr	r3, [r4, #0]
 8000e9c:	6922      	ldr	r2, [r4, #16]
 8000e9e:	f003 0306 	and.w	r3, r3, #6
 8000ea2:	2b04      	cmp	r3, #4
 8000ea4:	bf02      	ittt	eq
 8000ea6:	68e5      	ldreq	r5, [r4, #12]
 8000ea8:	6833      	ldreq	r3, [r6, #0]
 8000eaa:	1aed      	subeq	r5, r5, r3
 8000eac:	68a3      	ldr	r3, [r4, #8]
 8000eae:	bf0c      	ite	eq
 8000eb0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000eb4:	2500      	movne	r5, #0
 8000eb6:	4293      	cmp	r3, r2
 8000eb8:	bfc4      	itt	gt
 8000eba:	1a9b      	subgt	r3, r3, r2
 8000ebc:	18ed      	addgt	r5, r5, r3
 8000ebe:	2600      	movs	r6, #0
 8000ec0:	341a      	adds	r4, #26
 8000ec2:	42b5      	cmp	r5, r6
 8000ec4:	d11a      	bne.n	8000efc <_printf_common+0xc8>
 8000ec6:	2000      	movs	r0, #0
 8000ec8:	e008      	b.n	8000edc <_printf_common+0xa8>
 8000eca:	2301      	movs	r3, #1
 8000ecc:	4652      	mov	r2, sl
 8000ece:	4641      	mov	r1, r8
 8000ed0:	4638      	mov	r0, r7
 8000ed2:	47c8      	blx	r9
 8000ed4:	3001      	adds	r0, #1
 8000ed6:	d103      	bne.n	8000ee0 <_printf_common+0xac>
 8000ed8:	f04f 30ff 	mov.w	r0, #4294967295
 8000edc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ee0:	3501      	adds	r5, #1
 8000ee2:	e7c6      	b.n	8000e72 <_printf_common+0x3e>
 8000ee4:	18e1      	adds	r1, r4, r3
 8000ee6:	1c5a      	adds	r2, r3, #1
 8000ee8:	2030      	movs	r0, #48	@ 0x30
 8000eea:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000eee:	4422      	add	r2, r4
 8000ef0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000ef4:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000ef8:	3302      	adds	r3, #2
 8000efa:	e7c7      	b.n	8000e8c <_printf_common+0x58>
 8000efc:	2301      	movs	r3, #1
 8000efe:	4622      	mov	r2, r4
 8000f00:	4641      	mov	r1, r8
 8000f02:	4638      	mov	r0, r7
 8000f04:	47c8      	blx	r9
 8000f06:	3001      	adds	r0, #1
 8000f08:	d0e6      	beq.n	8000ed8 <_printf_common+0xa4>
 8000f0a:	3601      	adds	r6, #1
 8000f0c:	e7d9      	b.n	8000ec2 <_printf_common+0x8e>
	...

08000f10 <_printf_i>:
 8000f10:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000f14:	7e0f      	ldrb	r7, [r1, #24]
 8000f16:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000f18:	2f78      	cmp	r7, #120	@ 0x78
 8000f1a:	4691      	mov	r9, r2
 8000f1c:	4680      	mov	r8, r0
 8000f1e:	460c      	mov	r4, r1
 8000f20:	469a      	mov	sl, r3
 8000f22:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000f26:	d807      	bhi.n	8000f38 <_printf_i+0x28>
 8000f28:	2f62      	cmp	r7, #98	@ 0x62
 8000f2a:	d80a      	bhi.n	8000f42 <_printf_i+0x32>
 8000f2c:	2f00      	cmp	r7, #0
 8000f2e:	f000 80d2 	beq.w	80010d6 <_printf_i+0x1c6>
 8000f32:	2f58      	cmp	r7, #88	@ 0x58
 8000f34:	f000 80b9 	beq.w	80010aa <_printf_i+0x19a>
 8000f38:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000f3c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000f40:	e03a      	b.n	8000fb8 <_printf_i+0xa8>
 8000f42:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000f46:	2b15      	cmp	r3, #21
 8000f48:	d8f6      	bhi.n	8000f38 <_printf_i+0x28>
 8000f4a:	a101      	add	r1, pc, #4	@ (adr r1, 8000f50 <_printf_i+0x40>)
 8000f4c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000f50:	08000fa9 	.word	0x08000fa9
 8000f54:	08000fbd 	.word	0x08000fbd
 8000f58:	08000f39 	.word	0x08000f39
 8000f5c:	08000f39 	.word	0x08000f39
 8000f60:	08000f39 	.word	0x08000f39
 8000f64:	08000f39 	.word	0x08000f39
 8000f68:	08000fbd 	.word	0x08000fbd
 8000f6c:	08000f39 	.word	0x08000f39
 8000f70:	08000f39 	.word	0x08000f39
 8000f74:	08000f39 	.word	0x08000f39
 8000f78:	08000f39 	.word	0x08000f39
 8000f7c:	080010bd 	.word	0x080010bd
 8000f80:	08000fe7 	.word	0x08000fe7
 8000f84:	08001077 	.word	0x08001077
 8000f88:	08000f39 	.word	0x08000f39
 8000f8c:	08000f39 	.word	0x08000f39
 8000f90:	080010df 	.word	0x080010df
 8000f94:	08000f39 	.word	0x08000f39
 8000f98:	08000fe7 	.word	0x08000fe7
 8000f9c:	08000f39 	.word	0x08000f39
 8000fa0:	08000f39 	.word	0x08000f39
 8000fa4:	0800107f 	.word	0x0800107f
 8000fa8:	6833      	ldr	r3, [r6, #0]
 8000faa:	1d1a      	adds	r2, r3, #4
 8000fac:	681b      	ldr	r3, [r3, #0]
 8000fae:	6032      	str	r2, [r6, #0]
 8000fb0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000fb4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000fb8:	2301      	movs	r3, #1
 8000fba:	e09d      	b.n	80010f8 <_printf_i+0x1e8>
 8000fbc:	6833      	ldr	r3, [r6, #0]
 8000fbe:	6820      	ldr	r0, [r4, #0]
 8000fc0:	1d19      	adds	r1, r3, #4
 8000fc2:	6031      	str	r1, [r6, #0]
 8000fc4:	0606      	lsls	r6, r0, #24
 8000fc6:	d501      	bpl.n	8000fcc <_printf_i+0xbc>
 8000fc8:	681d      	ldr	r5, [r3, #0]
 8000fca:	e003      	b.n	8000fd4 <_printf_i+0xc4>
 8000fcc:	0645      	lsls	r5, r0, #25
 8000fce:	d5fb      	bpl.n	8000fc8 <_printf_i+0xb8>
 8000fd0:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000fd4:	2d00      	cmp	r5, #0
 8000fd6:	da03      	bge.n	8000fe0 <_printf_i+0xd0>
 8000fd8:	232d      	movs	r3, #45	@ 0x2d
 8000fda:	426d      	negs	r5, r5
 8000fdc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000fe0:	4859      	ldr	r0, [pc, #356]	@ (8001148 <_printf_i+0x238>)
 8000fe2:	230a      	movs	r3, #10
 8000fe4:	e011      	b.n	800100a <_printf_i+0xfa>
 8000fe6:	6821      	ldr	r1, [r4, #0]
 8000fe8:	6833      	ldr	r3, [r6, #0]
 8000fea:	0608      	lsls	r0, r1, #24
 8000fec:	f853 5b04 	ldr.w	r5, [r3], #4
 8000ff0:	d402      	bmi.n	8000ff8 <_printf_i+0xe8>
 8000ff2:	0649      	lsls	r1, r1, #25
 8000ff4:	bf48      	it	mi
 8000ff6:	b2ad      	uxthmi	r5, r5
 8000ff8:	2f6f      	cmp	r7, #111	@ 0x6f
 8000ffa:	4853      	ldr	r0, [pc, #332]	@ (8001148 <_printf_i+0x238>)
 8000ffc:	6033      	str	r3, [r6, #0]
 8000ffe:	bf14      	ite	ne
 8001000:	230a      	movne	r3, #10
 8001002:	2308      	moveq	r3, #8
 8001004:	2100      	movs	r1, #0
 8001006:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800100a:	6866      	ldr	r6, [r4, #4]
 800100c:	60a6      	str	r6, [r4, #8]
 800100e:	2e00      	cmp	r6, #0
 8001010:	bfa2      	ittt	ge
 8001012:	6821      	ldrge	r1, [r4, #0]
 8001014:	f021 0104 	bicge.w	r1, r1, #4
 8001018:	6021      	strge	r1, [r4, #0]
 800101a:	b90d      	cbnz	r5, 8001020 <_printf_i+0x110>
 800101c:	2e00      	cmp	r6, #0
 800101e:	d04b      	beq.n	80010b8 <_printf_i+0x1a8>
 8001020:	4616      	mov	r6, r2
 8001022:	fbb5 f1f3 	udiv	r1, r5, r3
 8001026:	fb03 5711 	mls	r7, r3, r1, r5
 800102a:	5dc7      	ldrb	r7, [r0, r7]
 800102c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001030:	462f      	mov	r7, r5
 8001032:	42bb      	cmp	r3, r7
 8001034:	460d      	mov	r5, r1
 8001036:	d9f4      	bls.n	8001022 <_printf_i+0x112>
 8001038:	2b08      	cmp	r3, #8
 800103a:	d10b      	bne.n	8001054 <_printf_i+0x144>
 800103c:	6823      	ldr	r3, [r4, #0]
 800103e:	07df      	lsls	r7, r3, #31
 8001040:	d508      	bpl.n	8001054 <_printf_i+0x144>
 8001042:	6923      	ldr	r3, [r4, #16]
 8001044:	6861      	ldr	r1, [r4, #4]
 8001046:	4299      	cmp	r1, r3
 8001048:	bfde      	ittt	le
 800104a:	2330      	movle	r3, #48	@ 0x30
 800104c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001050:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001054:	1b92      	subs	r2, r2, r6
 8001056:	6122      	str	r2, [r4, #16]
 8001058:	f8cd a000 	str.w	sl, [sp]
 800105c:	464b      	mov	r3, r9
 800105e:	aa03      	add	r2, sp, #12
 8001060:	4621      	mov	r1, r4
 8001062:	4640      	mov	r0, r8
 8001064:	f7ff fee6 	bl	8000e34 <_printf_common>
 8001068:	3001      	adds	r0, #1
 800106a:	d14a      	bne.n	8001102 <_printf_i+0x1f2>
 800106c:	f04f 30ff 	mov.w	r0, #4294967295
 8001070:	b004      	add	sp, #16
 8001072:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001076:	6823      	ldr	r3, [r4, #0]
 8001078:	f043 0320 	orr.w	r3, r3, #32
 800107c:	6023      	str	r3, [r4, #0]
 800107e:	4833      	ldr	r0, [pc, #204]	@ (800114c <_printf_i+0x23c>)
 8001080:	2778      	movs	r7, #120	@ 0x78
 8001082:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8001086:	6823      	ldr	r3, [r4, #0]
 8001088:	6831      	ldr	r1, [r6, #0]
 800108a:	061f      	lsls	r7, r3, #24
 800108c:	f851 5b04 	ldr.w	r5, [r1], #4
 8001090:	d402      	bmi.n	8001098 <_printf_i+0x188>
 8001092:	065f      	lsls	r7, r3, #25
 8001094:	bf48      	it	mi
 8001096:	b2ad      	uxthmi	r5, r5
 8001098:	6031      	str	r1, [r6, #0]
 800109a:	07d9      	lsls	r1, r3, #31
 800109c:	bf44      	itt	mi
 800109e:	f043 0320 	orrmi.w	r3, r3, #32
 80010a2:	6023      	strmi	r3, [r4, #0]
 80010a4:	b11d      	cbz	r5, 80010ae <_printf_i+0x19e>
 80010a6:	2310      	movs	r3, #16
 80010a8:	e7ac      	b.n	8001004 <_printf_i+0xf4>
 80010aa:	4827      	ldr	r0, [pc, #156]	@ (8001148 <_printf_i+0x238>)
 80010ac:	e7e9      	b.n	8001082 <_printf_i+0x172>
 80010ae:	6823      	ldr	r3, [r4, #0]
 80010b0:	f023 0320 	bic.w	r3, r3, #32
 80010b4:	6023      	str	r3, [r4, #0]
 80010b6:	e7f6      	b.n	80010a6 <_printf_i+0x196>
 80010b8:	4616      	mov	r6, r2
 80010ba:	e7bd      	b.n	8001038 <_printf_i+0x128>
 80010bc:	6833      	ldr	r3, [r6, #0]
 80010be:	6825      	ldr	r5, [r4, #0]
 80010c0:	6961      	ldr	r1, [r4, #20]
 80010c2:	1d18      	adds	r0, r3, #4
 80010c4:	6030      	str	r0, [r6, #0]
 80010c6:	062e      	lsls	r6, r5, #24
 80010c8:	681b      	ldr	r3, [r3, #0]
 80010ca:	d501      	bpl.n	80010d0 <_printf_i+0x1c0>
 80010cc:	6019      	str	r1, [r3, #0]
 80010ce:	e002      	b.n	80010d6 <_printf_i+0x1c6>
 80010d0:	0668      	lsls	r0, r5, #25
 80010d2:	d5fb      	bpl.n	80010cc <_printf_i+0x1bc>
 80010d4:	8019      	strh	r1, [r3, #0]
 80010d6:	2300      	movs	r3, #0
 80010d8:	6123      	str	r3, [r4, #16]
 80010da:	4616      	mov	r6, r2
 80010dc:	e7bc      	b.n	8001058 <_printf_i+0x148>
 80010de:	6833      	ldr	r3, [r6, #0]
 80010e0:	1d1a      	adds	r2, r3, #4
 80010e2:	6032      	str	r2, [r6, #0]
 80010e4:	681e      	ldr	r6, [r3, #0]
 80010e6:	6862      	ldr	r2, [r4, #4]
 80010e8:	2100      	movs	r1, #0
 80010ea:	4630      	mov	r0, r6
 80010ec:	f7ff f870 	bl	80001d0 <memchr>
 80010f0:	b108      	cbz	r0, 80010f6 <_printf_i+0x1e6>
 80010f2:	1b80      	subs	r0, r0, r6
 80010f4:	6060      	str	r0, [r4, #4]
 80010f6:	6863      	ldr	r3, [r4, #4]
 80010f8:	6123      	str	r3, [r4, #16]
 80010fa:	2300      	movs	r3, #0
 80010fc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001100:	e7aa      	b.n	8001058 <_printf_i+0x148>
 8001102:	6923      	ldr	r3, [r4, #16]
 8001104:	4632      	mov	r2, r6
 8001106:	4649      	mov	r1, r9
 8001108:	4640      	mov	r0, r8
 800110a:	47d0      	blx	sl
 800110c:	3001      	adds	r0, #1
 800110e:	d0ad      	beq.n	800106c <_printf_i+0x15c>
 8001110:	6823      	ldr	r3, [r4, #0]
 8001112:	079b      	lsls	r3, r3, #30
 8001114:	d413      	bmi.n	800113e <_printf_i+0x22e>
 8001116:	68e0      	ldr	r0, [r4, #12]
 8001118:	9b03      	ldr	r3, [sp, #12]
 800111a:	4298      	cmp	r0, r3
 800111c:	bfb8      	it	lt
 800111e:	4618      	movlt	r0, r3
 8001120:	e7a6      	b.n	8001070 <_printf_i+0x160>
 8001122:	2301      	movs	r3, #1
 8001124:	4632      	mov	r2, r6
 8001126:	4649      	mov	r1, r9
 8001128:	4640      	mov	r0, r8
 800112a:	47d0      	blx	sl
 800112c:	3001      	adds	r0, #1
 800112e:	d09d      	beq.n	800106c <_printf_i+0x15c>
 8001130:	3501      	adds	r5, #1
 8001132:	68e3      	ldr	r3, [r4, #12]
 8001134:	9903      	ldr	r1, [sp, #12]
 8001136:	1a5b      	subs	r3, r3, r1
 8001138:	42ab      	cmp	r3, r5
 800113a:	dcf2      	bgt.n	8001122 <_printf_i+0x212>
 800113c:	e7eb      	b.n	8001116 <_printf_i+0x206>
 800113e:	2500      	movs	r5, #0
 8001140:	f104 0619 	add.w	r6, r4, #25
 8001144:	e7f5      	b.n	8001132 <_printf_i+0x222>
 8001146:	bf00      	nop
 8001148:	08001418 	.word	0x08001418
 800114c:	08001429 	.word	0x08001429

08001150 <__sflush_r>:
 8001150:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001154:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001158:	0716      	lsls	r6, r2, #28
 800115a:	4605      	mov	r5, r0
 800115c:	460c      	mov	r4, r1
 800115e:	d454      	bmi.n	800120a <__sflush_r+0xba>
 8001160:	684b      	ldr	r3, [r1, #4]
 8001162:	2b00      	cmp	r3, #0
 8001164:	dc02      	bgt.n	800116c <__sflush_r+0x1c>
 8001166:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001168:	2b00      	cmp	r3, #0
 800116a:	dd48      	ble.n	80011fe <__sflush_r+0xae>
 800116c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800116e:	2e00      	cmp	r6, #0
 8001170:	d045      	beq.n	80011fe <__sflush_r+0xae>
 8001172:	2300      	movs	r3, #0
 8001174:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8001178:	682f      	ldr	r7, [r5, #0]
 800117a:	6a21      	ldr	r1, [r4, #32]
 800117c:	602b      	str	r3, [r5, #0]
 800117e:	d030      	beq.n	80011e2 <__sflush_r+0x92>
 8001180:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001182:	89a3      	ldrh	r3, [r4, #12]
 8001184:	0759      	lsls	r1, r3, #29
 8001186:	d505      	bpl.n	8001194 <__sflush_r+0x44>
 8001188:	6863      	ldr	r3, [r4, #4]
 800118a:	1ad2      	subs	r2, r2, r3
 800118c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800118e:	b10b      	cbz	r3, 8001194 <__sflush_r+0x44>
 8001190:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001192:	1ad2      	subs	r2, r2, r3
 8001194:	2300      	movs	r3, #0
 8001196:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001198:	6a21      	ldr	r1, [r4, #32]
 800119a:	4628      	mov	r0, r5
 800119c:	47b0      	blx	r6
 800119e:	1c43      	adds	r3, r0, #1
 80011a0:	89a3      	ldrh	r3, [r4, #12]
 80011a2:	d106      	bne.n	80011b2 <__sflush_r+0x62>
 80011a4:	6829      	ldr	r1, [r5, #0]
 80011a6:	291d      	cmp	r1, #29
 80011a8:	d82b      	bhi.n	8001202 <__sflush_r+0xb2>
 80011aa:	4a2a      	ldr	r2, [pc, #168]	@ (8001254 <__sflush_r+0x104>)
 80011ac:	410a      	asrs	r2, r1
 80011ae:	07d6      	lsls	r6, r2, #31
 80011b0:	d427      	bmi.n	8001202 <__sflush_r+0xb2>
 80011b2:	2200      	movs	r2, #0
 80011b4:	6062      	str	r2, [r4, #4]
 80011b6:	04d9      	lsls	r1, r3, #19
 80011b8:	6922      	ldr	r2, [r4, #16]
 80011ba:	6022      	str	r2, [r4, #0]
 80011bc:	d504      	bpl.n	80011c8 <__sflush_r+0x78>
 80011be:	1c42      	adds	r2, r0, #1
 80011c0:	d101      	bne.n	80011c6 <__sflush_r+0x76>
 80011c2:	682b      	ldr	r3, [r5, #0]
 80011c4:	b903      	cbnz	r3, 80011c8 <__sflush_r+0x78>
 80011c6:	6560      	str	r0, [r4, #84]	@ 0x54
 80011c8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80011ca:	602f      	str	r7, [r5, #0]
 80011cc:	b1b9      	cbz	r1, 80011fe <__sflush_r+0xae>
 80011ce:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80011d2:	4299      	cmp	r1, r3
 80011d4:	d002      	beq.n	80011dc <__sflush_r+0x8c>
 80011d6:	4628      	mov	r0, r5
 80011d8:	f7ff fbf2 	bl	80009c0 <_free_r>
 80011dc:	2300      	movs	r3, #0
 80011de:	6363      	str	r3, [r4, #52]	@ 0x34
 80011e0:	e00d      	b.n	80011fe <__sflush_r+0xae>
 80011e2:	2301      	movs	r3, #1
 80011e4:	4628      	mov	r0, r5
 80011e6:	47b0      	blx	r6
 80011e8:	4602      	mov	r2, r0
 80011ea:	1c50      	adds	r0, r2, #1
 80011ec:	d1c9      	bne.n	8001182 <__sflush_r+0x32>
 80011ee:	682b      	ldr	r3, [r5, #0]
 80011f0:	2b00      	cmp	r3, #0
 80011f2:	d0c6      	beq.n	8001182 <__sflush_r+0x32>
 80011f4:	2b1d      	cmp	r3, #29
 80011f6:	d001      	beq.n	80011fc <__sflush_r+0xac>
 80011f8:	2b16      	cmp	r3, #22
 80011fa:	d11e      	bne.n	800123a <__sflush_r+0xea>
 80011fc:	602f      	str	r7, [r5, #0]
 80011fe:	2000      	movs	r0, #0
 8001200:	e022      	b.n	8001248 <__sflush_r+0xf8>
 8001202:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001206:	b21b      	sxth	r3, r3
 8001208:	e01b      	b.n	8001242 <__sflush_r+0xf2>
 800120a:	690f      	ldr	r7, [r1, #16]
 800120c:	2f00      	cmp	r7, #0
 800120e:	d0f6      	beq.n	80011fe <__sflush_r+0xae>
 8001210:	0793      	lsls	r3, r2, #30
 8001212:	680e      	ldr	r6, [r1, #0]
 8001214:	bf08      	it	eq
 8001216:	694b      	ldreq	r3, [r1, #20]
 8001218:	600f      	str	r7, [r1, #0]
 800121a:	bf18      	it	ne
 800121c:	2300      	movne	r3, #0
 800121e:	eba6 0807 	sub.w	r8, r6, r7
 8001222:	608b      	str	r3, [r1, #8]
 8001224:	f1b8 0f00 	cmp.w	r8, #0
 8001228:	dde9      	ble.n	80011fe <__sflush_r+0xae>
 800122a:	6a21      	ldr	r1, [r4, #32]
 800122c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800122e:	4643      	mov	r3, r8
 8001230:	463a      	mov	r2, r7
 8001232:	4628      	mov	r0, r5
 8001234:	47b0      	blx	r6
 8001236:	2800      	cmp	r0, #0
 8001238:	dc08      	bgt.n	800124c <__sflush_r+0xfc>
 800123a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800123e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001242:	81a3      	strh	r3, [r4, #12]
 8001244:	f04f 30ff 	mov.w	r0, #4294967295
 8001248:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800124c:	4407      	add	r7, r0
 800124e:	eba8 0800 	sub.w	r8, r8, r0
 8001252:	e7e7      	b.n	8001224 <__sflush_r+0xd4>
 8001254:	dfbffffe 	.word	0xdfbffffe

08001258 <_fflush_r>:
 8001258:	b538      	push	{r3, r4, r5, lr}
 800125a:	690b      	ldr	r3, [r1, #16]
 800125c:	4605      	mov	r5, r0
 800125e:	460c      	mov	r4, r1
 8001260:	b913      	cbnz	r3, 8001268 <_fflush_r+0x10>
 8001262:	2500      	movs	r5, #0
 8001264:	4628      	mov	r0, r5
 8001266:	bd38      	pop	{r3, r4, r5, pc}
 8001268:	b118      	cbz	r0, 8001272 <_fflush_r+0x1a>
 800126a:	6a03      	ldr	r3, [r0, #32]
 800126c:	b90b      	cbnz	r3, 8001272 <_fflush_r+0x1a>
 800126e:	f7ff f9ad 	bl	80005cc <__sinit>
 8001272:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001276:	2b00      	cmp	r3, #0
 8001278:	d0f3      	beq.n	8001262 <_fflush_r+0xa>
 800127a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800127c:	07d0      	lsls	r0, r2, #31
 800127e:	d404      	bmi.n	800128a <_fflush_r+0x32>
 8001280:	0599      	lsls	r1, r3, #22
 8001282:	d402      	bmi.n	800128a <_fflush_r+0x32>
 8001284:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001286:	f7ff fb98 	bl	80009ba <__retarget_lock_acquire_recursive>
 800128a:	4628      	mov	r0, r5
 800128c:	4621      	mov	r1, r4
 800128e:	f7ff ff5f 	bl	8001150 <__sflush_r>
 8001292:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001294:	07da      	lsls	r2, r3, #31
 8001296:	4605      	mov	r5, r0
 8001298:	d4e4      	bmi.n	8001264 <_fflush_r+0xc>
 800129a:	89a3      	ldrh	r3, [r4, #12]
 800129c:	059b      	lsls	r3, r3, #22
 800129e:	d4e1      	bmi.n	8001264 <_fflush_r+0xc>
 80012a0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80012a2:	f7ff fb8b 	bl	80009bc <__retarget_lock_release_recursive>
 80012a6:	e7dd      	b.n	8001264 <_fflush_r+0xc>

080012a8 <__swhatbuf_r>:
 80012a8:	b570      	push	{r4, r5, r6, lr}
 80012aa:	460c      	mov	r4, r1
 80012ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012b0:	2900      	cmp	r1, #0
 80012b2:	b096      	sub	sp, #88	@ 0x58
 80012b4:	4615      	mov	r5, r2
 80012b6:	461e      	mov	r6, r3
 80012b8:	da0d      	bge.n	80012d6 <__swhatbuf_r+0x2e>
 80012ba:	89a3      	ldrh	r3, [r4, #12]
 80012bc:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80012c0:	f04f 0100 	mov.w	r1, #0
 80012c4:	bf14      	ite	ne
 80012c6:	2340      	movne	r3, #64	@ 0x40
 80012c8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80012cc:	2000      	movs	r0, #0
 80012ce:	6031      	str	r1, [r6, #0]
 80012d0:	602b      	str	r3, [r5, #0]
 80012d2:	b016      	add	sp, #88	@ 0x58
 80012d4:	bd70      	pop	{r4, r5, r6, pc}
 80012d6:	466a      	mov	r2, sp
 80012d8:	f000 f848 	bl	800136c <_fstat_r>
 80012dc:	2800      	cmp	r0, #0
 80012de:	dbec      	blt.n	80012ba <__swhatbuf_r+0x12>
 80012e0:	9901      	ldr	r1, [sp, #4]
 80012e2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80012e6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80012ea:	4259      	negs	r1, r3
 80012ec:	4159      	adcs	r1, r3
 80012ee:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80012f2:	e7eb      	b.n	80012cc <__swhatbuf_r+0x24>

080012f4 <__smakebuf_r>:
 80012f4:	898b      	ldrh	r3, [r1, #12]
 80012f6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80012f8:	079d      	lsls	r5, r3, #30
 80012fa:	4606      	mov	r6, r0
 80012fc:	460c      	mov	r4, r1
 80012fe:	d507      	bpl.n	8001310 <__smakebuf_r+0x1c>
 8001300:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001304:	6023      	str	r3, [r4, #0]
 8001306:	6123      	str	r3, [r4, #16]
 8001308:	2301      	movs	r3, #1
 800130a:	6163      	str	r3, [r4, #20]
 800130c:	b003      	add	sp, #12
 800130e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001310:	ab01      	add	r3, sp, #4
 8001312:	466a      	mov	r2, sp
 8001314:	f7ff ffc8 	bl	80012a8 <__swhatbuf_r>
 8001318:	9f00      	ldr	r7, [sp, #0]
 800131a:	4605      	mov	r5, r0
 800131c:	4639      	mov	r1, r7
 800131e:	4630      	mov	r0, r6
 8001320:	f7ff fbba 	bl	8000a98 <_malloc_r>
 8001324:	b948      	cbnz	r0, 800133a <__smakebuf_r+0x46>
 8001326:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800132a:	059a      	lsls	r2, r3, #22
 800132c:	d4ee      	bmi.n	800130c <__smakebuf_r+0x18>
 800132e:	f023 0303 	bic.w	r3, r3, #3
 8001332:	f043 0302 	orr.w	r3, r3, #2
 8001336:	81a3      	strh	r3, [r4, #12]
 8001338:	e7e2      	b.n	8001300 <__smakebuf_r+0xc>
 800133a:	89a3      	ldrh	r3, [r4, #12]
 800133c:	6020      	str	r0, [r4, #0]
 800133e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001342:	81a3      	strh	r3, [r4, #12]
 8001344:	9b01      	ldr	r3, [sp, #4]
 8001346:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800134a:	b15b      	cbz	r3, 8001364 <__smakebuf_r+0x70>
 800134c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001350:	4630      	mov	r0, r6
 8001352:	f000 f81d 	bl	8001390 <_isatty_r>
 8001356:	b128      	cbz	r0, 8001364 <__smakebuf_r+0x70>
 8001358:	89a3      	ldrh	r3, [r4, #12]
 800135a:	f023 0303 	bic.w	r3, r3, #3
 800135e:	f043 0301 	orr.w	r3, r3, #1
 8001362:	81a3      	strh	r3, [r4, #12]
 8001364:	89a3      	ldrh	r3, [r4, #12]
 8001366:	431d      	orrs	r5, r3
 8001368:	81a5      	strh	r5, [r4, #12]
 800136a:	e7cf      	b.n	800130c <__smakebuf_r+0x18>

0800136c <_fstat_r>:
 800136c:	b538      	push	{r3, r4, r5, lr}
 800136e:	4d07      	ldr	r5, [pc, #28]	@ (800138c <_fstat_r+0x20>)
 8001370:	2300      	movs	r3, #0
 8001372:	4604      	mov	r4, r0
 8001374:	4608      	mov	r0, r1
 8001376:	4611      	mov	r1, r2
 8001378:	602b      	str	r3, [r5, #0]
 800137a:	f7ff f812 	bl	80003a2 <_fstat>
 800137e:	1c43      	adds	r3, r0, #1
 8001380:	d102      	bne.n	8001388 <_fstat_r+0x1c>
 8001382:	682b      	ldr	r3, [r5, #0]
 8001384:	b103      	cbz	r3, 8001388 <_fstat_r+0x1c>
 8001386:	6023      	str	r3, [r4, #0]
 8001388:	bd38      	pop	{r3, r4, r5, pc}
 800138a:	bf00      	nop
 800138c:	200001b8 	.word	0x200001b8

08001390 <_isatty_r>:
 8001390:	b538      	push	{r3, r4, r5, lr}
 8001392:	4d06      	ldr	r5, [pc, #24]	@ (80013ac <_isatty_r+0x1c>)
 8001394:	2300      	movs	r3, #0
 8001396:	4604      	mov	r4, r0
 8001398:	4608      	mov	r0, r1
 800139a:	602b      	str	r3, [r5, #0]
 800139c:	f7ff f811 	bl	80003c2 <_isatty>
 80013a0:	1c43      	adds	r3, r0, #1
 80013a2:	d102      	bne.n	80013aa <_isatty_r+0x1a>
 80013a4:	682b      	ldr	r3, [r5, #0]
 80013a6:	b103      	cbz	r3, 80013aa <_isatty_r+0x1a>
 80013a8:	6023      	str	r3, [r4, #0]
 80013aa:	bd38      	pop	{r3, r4, r5, pc}
 80013ac:	200001b8 	.word	0x200001b8

080013b0 <_sbrk_r>:
 80013b0:	b538      	push	{r3, r4, r5, lr}
 80013b2:	4d06      	ldr	r5, [pc, #24]	@ (80013cc <_sbrk_r+0x1c>)
 80013b4:	2300      	movs	r3, #0
 80013b6:	4604      	mov	r4, r0
 80013b8:	4608      	mov	r0, r1
 80013ba:	602b      	str	r3, [r5, #0]
 80013bc:	f7ff f81a 	bl	80003f4 <_sbrk>
 80013c0:	1c43      	adds	r3, r0, #1
 80013c2:	d102      	bne.n	80013ca <_sbrk_r+0x1a>
 80013c4:	682b      	ldr	r3, [r5, #0]
 80013c6:	b103      	cbz	r3, 80013ca <_sbrk_r+0x1a>
 80013c8:	6023      	str	r3, [r4, #0]
 80013ca:	bd38      	pop	{r3, r4, r5, pc}
 80013cc:	200001b8 	.word	0x200001b8

080013d0 <_init>:
 80013d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013d2:	bf00      	nop
 80013d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013d6:	bc08      	pop	{r3}
 80013d8:	469e      	mov	lr, r3
 80013da:	4770      	bx	lr

080013dc <_fini>:
 80013dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013de:	bf00      	nop
 80013e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013e2:	bc08      	pop	{r3}
 80013e4:	469e      	mov	lr, r3
 80013e6:	4770      	bx	lr
